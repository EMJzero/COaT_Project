 ==  Bambu executed with: /tmp/.mount_bambu-38sLHi/usr/bin/bambu -v 2 --top-fname=invert_matrix --compiler=I386_CLANG12 -lm --simulate --simulator=VERILATOR --verilator-parallel --parallel-backend --libm-std-rounding --evaluation --device-name=xc7vx690t-3ffg1930-VVD ../test.c 


********************************************************************************
                    ____                  _
                   | __ )  __ _ _ __ ___ | |_   _   _
                   |  _ \ / _` | '_ ` _ \| '_ \| | | |
                   | |_) | (_| | | | | | | |_) | |_| |
                   |____/ \__,_|_| |_| |_|_.__/ \__,_|

********************************************************************************
                         High-Level Synthesis Tool

                         Politecnico di Milano - DEIB
                          System Architectures Group
********************************************************************************
                Copyright (C) 2004-2023 Politecnico di Milano
 Version: PandA 2023.1 - Revision 04336c437a53bc96ae90b74052c455629946ec8b-main

Parameters parsed in 0.14 seconds

Target technology = FPGA
Library Name     : STD_FU
  Total cells    : 3
  - combinational: 0
  - others: 3

Library Name     : STD_FU
  Total cells    : 10
  - combinational: 0
  - others: 10

Library Name     : STD_FU
  Total cells    : 33
  - combinational: 0
  - others: 33

Library Name     : STD_FU
  Total cells    : 8
  - combinational: 0
  - others: 8

Library Name     : STD_FU
  Total cells    : 56
  - combinational: 0
  - others: 56

Library Name     : STD_FU
  Total cells    : 1
  - combinational: 0
  - others: 1

Library Name     : CS_COMPONENT
  Total cells    : 16
  - combinational: 0
  - others: 16

Library Name     : STD_FU
  Total cells    : 2
  - combinational: 0
  - others: 2

Library Name     : STD_FU
  Total cells    : 0
  - combinational: 0
  - others: 0

Library Name     : STD_FU
  Total cells    : 3
  - combinational: 0
  - others: 3

Library Name     : STD_FU
  Total cells    : 21
  - combinational: 0
  - others: 21

Library Name     : STD
  Total cells    : 14
  - combinational: 0
  - others: 14

Library Name     : STD_COMMON
  Total cells    : 57
  - combinational: 0
  - others: 57

Library Name     : STD_FU
  Total cells    : 28
  - combinational: 0
  - others: 28

Library Name     : STD_PC
  Total cells    : 16
  - combinational: 0
  - others: 16

Library Name     : STD_SOFT_FLOAT
  Total cells    : 2
  - combinational: 0
  - others: 2

Library Name     : STD
  Total cells    : 72
  - combinational: 0
  - others: 72

Library Name     : STD_FU
  Total cells    : 2
  - combinational: 0
  - others: 2

Library Name     : STD_FU
  Total cells    : 9
  - combinational: 0
  - others: 9

Library Name     : WBWrapper
  Total cells    : 12
  - combinational: 0
  - others: 12

Available devices:
 - 5CSEMA5F31C6
 - 5SGXEA7N2F45C1
 - EP2C70F896C6
 - EP2C70F896C6-R
 - EP4SGX530KH40C2
 - LFE335EA8FN484C
 - LFE5U85F8BG756C
 - LFE5UM85F8BG756C
 - asap7-BC
 - asap7-TC
 - asap7-WC
 - nangate45
 - nx1h140tsp
 - nx1h35S
 - nx2h540tsc
 - xc4vlx100-10ff1513
 - xc5vlx110t-1ff1136
 - xc5vlx330t-2ff1738
 - xc5vlx50-3ff1153
 - xc6vlx240t-1ff1156
 - xc7a100t-1csg324-VVD
 - xc7vx330t-1ffg1157
 - xc7vx485t-2ffg1761-VVD
 - xc7vx690t-3ffg1930-VVD
 - xc7z020-1clg484
 - xc7z020-1clg484-VVD
 - xc7z020-1clg484-YOSYS-VVD
 - xc7z045-2ffg900-VVD
 - xcku060-3ffva1156-VVD
 - xcu280-2Lfsvh2892-VVD
Library Name     : STD_FU
  Total cells    : 3911
  - combinational: 0
  - others: 3911

!! Unknown ext. calls:
llvm.var.annotation
  Bit Value Opt: cond_expr optimized, nbits = 1
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: cond_expr optimized, nbits = 2
  Bit Value Opt: cond_expr optimized, nbits = 2
  Bit Value Opt: cond_expr optimized, nbits = 3
  Bit Value Opt: cond_expr optimized, nbits = 2
  Bit Value Opt: cond_expr optimized, nbits = 3
  Bit Value Opt: cond_expr optimized, nbits = 4
  Bit Value Opt: cond_expr optimized, nbits = 5
  Bit Value Opt: bit_xor_expr optimized, nbits = 2
  Bit Value Opt: bit_and_expr optimized, nbits = 2
  Bit Value Opt: ne_expr optimized, nbits = 2
  Bit Value Opt: plus_expr optimized, nbits = 2
  Bit Value Opt: bit_and_expr optimized, nbits = 11
  Bit Value Opt: eq_expr optimized, nbits = 11
  Bit Value Opt: bit_and_expr optimized, nbits = 19
  Bit Value Opt: eq_expr optimized, nbits = 19
  Bit Value Opt: bit_and_expr optimized, nbits = 23
  Bit Value Opt: eq_expr optimized, nbits = 23
  Bit Value Opt: bit_and_expr optimized, nbits = 25
  Bit Value Opt: eq_expr optimized, nbits = 25
  Bit Value Opt: bit_and_expr optimized, nbits = 26
  Bit Value Opt: eq_expr optimized, nbits = 26
  Bit Value Opt: bit_and_expr optimized, nbits = 26
  Bit Value Opt: ne_expr optimized, nbits = 26
  Bit Value Opt: bit_and_expr optimized, nbits = 23
  Bit Value Opt: eq_expr optimized, nbits = 23
  Bit Value Opt: cond_expr optimized, nbits = 1
  Bit Value Opt: cond_expr optimized, nbits = 1
  Bit Value Opt: cond_expr optimized, nbits = 1
  Bit Value Opt: cond_expr optimized, nbits = 1
  Bit Value Opt: cond_expr optimized, nbits = 23
  Bit Value Opt: minus_expr optimized, nbits = 1
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: bit_and_expr optimized, nbits = 2
  Bit Value Opt: eq_expr optimized, nbits = 2
  Bit Value Opt: bit_and_expr optimized, nbits = 1
  Bit Value Opt: cond_expr optimized, nbits = 1
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: cond_expr optimized, nbits = 2
  Bit Value Opt: plus_expr optimized, nbits = 2
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: plus_expr optimized, nbits = 3
  Bit Value Opt: plus_expr optimized, nbits = 2
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: plus_expr optimized, nbits = 4
  Bit Value Opt: plus_expr optimized, nbits = 3
  Bit Value Opt: plus_expr optimized, nbits = 2
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: plus_expr optimized, nbits = 4
  Bit Value Opt: plus_expr optimized, nbits = 5
  Bit Value Opt: plus_expr optimized, nbits = 3
  Bit Value Opt: plus_expr optimized, nbits = 2
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: bit_and_expr optimized, nbits = 2
  Bit Value Opt: eq_expr optimized, nbits = 2
  Bit Value Opt: bit_and_expr optimized, nbits = 1
  Bit Value Opt: cond_expr optimized, nbits = 1
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: cond_expr optimized, nbits = 2
  Bit Value Opt: plus_expr optimized, nbits = 2
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: plus_expr optimized, nbits = 3
  Bit Value Opt: plus_expr optimized, nbits = 2
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: plus_expr optimized, nbits = 4
  Bit Value Opt: plus_expr optimized, nbits = 3
  Bit Value Opt: plus_expr optimized, nbits = 2
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: plus_expr optimized, nbits = 4
  Bit Value Opt: plus_expr optimized, nbits = 5
  Bit Value Opt: plus_expr optimized, nbits = 3
  Bit Value Opt: plus_expr optimized, nbits = 2
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: cond_expr optimized, nbits = 1
  Bit Value Opt: bit_and_expr optimized, nbits = 1
  Bit Value Opt: bit_xor_expr optimized, nbits = 1
  Bit Value Opt: bit_and_expr optimized, nbits = 1
  Bit Value Opt: minus_expr optimized, nbits = 1
  Bit Value Opt: bit_and_expr optimized, nbits = 1
  Bit Value Opt: bit_and_expr optimized, nbits = 1
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: bit_and_expr optimized, nbits = 22
  Bit Value Opt: ne_expr optimized, nbits = 22
  Bit Value Opt: bit_and_expr optimized, nbits = 3
  Bit Value Opt: bit_and_expr optimized, nbits = 3
  Bit Value Opt: bit_and_expr optimized, nbits = 3
  Bit Value Opt: bit_and_expr optimized, nbits = 9
  Bit Value Opt: bit_and_expr optimized, nbits = 1
  Bit Value Opt: bit_and_expr optimized, nbits = 1
  Bit Value Opt: bit_and_expr optimized, nbits = 1
  Bit Value Opt: bit_and_expr optimized, nbits = 1
  Bit Value Opt: bit_and_expr optimized, nbits = 1
  Bit Value Opt: bit_and_expr optimized, nbits = 2
  Bit Value Opt: bit_and_expr optimized, nbits = 1
  Bit Value Opt: bit_and_expr optimized, nbits = 3
  Bit Value Opt: bit_and_expr optimized, nbits = 2
  Bit Value Opt: bit_and_expr optimized, nbits = 1
  Bit Value Opt: bit_and_expr optimized, nbits = 3
  Bit Value Opt: bit_and_expr optimized, nbits = 3
  Bit Value Opt: bit_and_expr optimized, nbits = 2
  Bit Value Opt: bit_and_expr optimized, nbits = 1
  Bit Value Opt: eq_expr optimized, nbits = 1
  Bit Value Opt: bit_and_expr optimized, nbits = 1
  Bit Value Opt: minus_expr optimized, nbits = 1
  Bit Value Opt: bit_and_expr optimized, nbits = 26
  Bit Value Opt: ne_expr optimized, nbits = 26
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: cond_expr optimized, nbits = 1
  Bit Value Opt: cond_expr optimized, nbits = 1
  Bit Value Opt: cond_expr optimized, nbits = 1
  Bit Value Opt: cond_expr optimized, nbits = 1
  Bit Value Opt: cond_expr optimized, nbits = 1
  Bit Value Opt: bit_xor_expr optimized, nbits = 1
  Bit Value Opt: bit_and_expr optimized, nbits = 1
  Bit Value Opt: ne_expr optimized, nbits = 1
  Bit Value Opt: cond_expr optimized, nbits = 1
  Bit Value Opt: bit_and_expr optimized, nbits = 22
  Bit Value Opt: ne_expr optimized, nbits = 22
  Bit Value Opt: bit_and_expr optimized, nbits = 47
  Bit Value Opt: ne_expr optimized, nbits = 47
  Bit Value Opt: bit_and_expr optimized, nbits = 9
  Bit Value Opt: ne_expr optimized, nbits = 9
  Bit Value Opt: bit_and_expr optimized, nbits = 24
  Bit Value Opt: ne_expr optimized, nbits = 24
  Bit Value Opt: bit_and_expr optimized, nbits = 2
  Bit Value Opt: plus_expr optimized, nbits = 2
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: plus_expr optimized, nbits = 2
  Bit Value Opt: plus_expr optimized, nbits = 2
  Bit Value Opt: eq_expr optimized, nbits = 2
  Bit Value Opt: cond_expr optimized, nbits = 23
  Bit Value Opt: bit_and_expr optimized, nbits = 2
  Bit Value Opt: cond_expr optimized, nbits = 23
  Bit Value Opt: plus_expr optimized, nbits = 2
  Bit Value Opt: cond_expr optimized, nbits = 23
  Bit Value Opt: cond_expr optimized, nbits = 23
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: cond_expr optimized, nbits = 23
  Bit Value Opt: plus_expr optimized, nbits = 2
  Bit Value Opt: plus_expr optimized, nbits = 2
  Bit Value Opt: eq_expr optimized, nbits = 2
  Bit Value Opt: bit_and_expr optimized, nbits = 1
  Bit Value Opt: bit_and_expr optimized, nbits = 1
  Bit Value Opt: bit_and_expr optimized, nbits = 1
  Bit Value Opt: bit_and_expr optimized, nbits = 1
  Bit Value Opt: bit_and_expr optimized, nbits = 1
  Bit Value Opt: bit_and_expr optimized, nbits = 1
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: eq_expr optimized, nbits = 1
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: eq_expr optimized, nbits = 1
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: eq_expr optimized, nbits = 1
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: eq_expr optimized, nbits = 1
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: eq_expr optimized, nbits = 1
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: eq_expr optimized, nbits = 1
  Bit Value Opt: bit_and_expr optimized, nbits = 2
  Bit Value Opt: plus_expr optimized, nbits = 2
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: plus_expr optimized, nbits = 2
  Bit Value Opt: plus_expr optimized, nbits = 2
  Bit Value Opt: eq_expr optimized, nbits = 2
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: cond_expr optimized, nbits = 23
  Bit Value Opt: bit_and_expr optimized, nbits = 2
  Bit Value Opt: bit_and_expr optimized, nbits = 3
Function call to __float_lte8m23b_127nih inlined in invert_matrix
Function call to __float_lte8m23b_127nih inlined in invert_matrix
Function call to __float_gte8m23b_127nih inlined in invert_matrix

  Functions to be synthesized:
    invert_matrix
    __float_mule8m23b_127nih
    __float_adde8m23b_127nih
    __float_divSRT4e8m23b_127nih


  Memory allocation information:
  Sparse memory alignemnt set to 64 bytes
    Internal variable: internal_475616 - 475616 - internal_475616 in function invert_matrix
      Id: 475616
      Base Address: 64
      Size: 64
      Used &(object)
      Number of functions in which is used: 1
      Maximum number of references per function: 8
      Maximum number of loads per function: 3
    Internal variable: internal_475820 - 475820 - internal_475820 in function invert_matrix
      Id: 475820
      Base Address: 128
      Size: 64
      Used &(object)
      Number of functions in which is used: 1
      Maximum number of references per function: 11
      Maximum number of loads per function: 4
    Internal variable: internal_476048 - 476048 - internal_476048 in function invert_matrix
      Id: 476048
      Base Address: 64
      Size: 4
      Is a private memory
      The variable is always accessed with the same data size
      Number of functions in which is used: 1
      Maximum number of references per function: 4
      Maximum number of loads per function: 3
    Internal variable: internal_476085 - 476085 - internal_476085 in function invert_matrix
      Id: 476085
      Base Address: 64
      Size: 4
      Is a private memory
      The variable is always accessed with the same data size
      Number of functions in which is used: 1
      Maximum number of references per function: 3
    Internal variable: internal_476217 - 476217 - internal_476217 in function invert_matrix
      Id: 476217
      Base Address: 64
      Size: 4
      Is a private memory
      The variable is always accessed with the same data size
      Number of functions in which is used: 1
      Maximum number of references per function: 4
      Maximum number of loads per function: 3
    Internal variable: internal_476243 - 476243 - internal_476243 in function invert_matrix
      Id: 476243
      Base Address: 64
      Size: 4
      Is a private memory
      The variable is always accessed with the same data size
      Number of functions in which is used: 1
      Maximum number of references per function: 3
    Internal variable: internal_476342 - 476342 - internal_476342 in function invert_matrix
      Id: 476342
      Base Address: 64
      Size: 4
      Is a private memory
      The variable is always accessed with the same data size
      Number of functions in which is used: 1
      Maximum number of references per function: 1
    Internal variable: internal_476366 - 476366 - internal_476366 in function invert_matrix
      Id: 476366
      Base Address: 64
      Size: 4
      Is a private memory
      The variable is always accessed with the same data size
      Number of functions in which is used: 1
      Maximum number of references per function: 4
      Maximum number of loads per function: 3
    Internal variable: internal_476422 - 476422 - internal_476422 in function invert_matrix
      Id: 476422
      Base Address: 64
      Size: 4
      Is a private memory
      The variable is always accessed with the same data size
      Number of functions in which is used: 1
      Maximum number of references per function: 1
    Internal variable: internal_476443 - 476443 - internal_476443 in function invert_matrix
      Id: 476443
      Base Address: 64
      Size: 4
      Is a private memory
      The variable is always accessed with the same data size
      Number of functions in which is used: 1
      Maximum number of references per function: 4
      Maximum number of loads per function: 3
    Internal variable: internal_476506 - 476506 - internal_476506 in function invert_matrix
      Id: 476506
      Base Address: 64
      Size: 4
      Is a private memory
      The variable is always accessed with the same data size
      Number of functions in which is used: 1
      Maximum number of references per function: 2
      Maximum number of loads per function: 1
    Internal variable: internal_476536 - 476536 - internal_476536 in function invert_matrix
      Id: 476536
      Base Address: 64
      Size: 4
      Is a private memory
      The variable is always accessed with the same data size
      Number of functions in which is used: 1
      Maximum number of references per function: 1
    Internal variable: internal_476562 - 476562 - internal_476562 in function invert_matrix
      Id: 476562
      Base Address: 64
      Size: 4
      Is a private memory
      The variable is always accessed with the same data size
      Number of functions in which is used: 1
      Maximum number of references per function: 4
      Maximum number of loads per function: 3
    Internal variable: internal_476662 - 476662 - internal_476662 in function invert_matrix
      Id: 476662
      Base Address: 64
      Size: 4
      Is a private memory
      The variable is always accessed with the same data size
      Number of functions in which is used: 1
      Maximum number of references per function: 1
    Internal variable: internal_476689 - 476689 - internal_476689 in function invert_matrix
      Id: 476689
      Base Address: 64
      Size: 4
      Is a private memory
      The variable is always accessed with the same data size
      Number of functions in which is used: 1
      Maximum number of references per function: 4
      Maximum number of loads per function: 3
    Internal variable: internal_476778 - 476778 - internal_476778 in function invert_matrix
      Id: 476778
      Base Address: 64
      Size: 4
      Is a private memory
      The variable is always accessed with the same data size
      Number of functions in which is used: 1
      Maximum number of references per function: 2
      Maximum number of loads per function: 1
    Internal variable: internal_476819 - 476819 - internal_476819 in function invert_matrix
      Id: 476819
      Base Address: 64
      Size: 4
      Is a private memory
      The variable is always accessed with the same data size
      Number of functions in which is used: 1
      Maximum number of references per function: 1
    Internal variable: internal_476841 - 476841 - internal_476841 in function invert_matrix
      Id: 476841
      Base Address: 64
      Size: 4
      Is a private memory
      The variable is always accessed with the same data size
      Number of functions in which is used: 1
      Maximum number of references per function: 1
Warning: This function uses unknown addresses: invert_matrix
    BRAM bitsize: 16
    Spec may not exploit DATA bus width
    Spec accesses data having an address unknown at compile time
    Internal data is not externally accessible
    DATA bus bitsize: 32
    ADDRESS bus bitsize: 32
    SIZE bus bitsize: 6
    Internally allocated memory (no private memories): 128
    Internally allocated memory: 192
  Time to perform memory allocation: 0.00 seconds


  Module allocation information for function __float_adde8m23b_127nih:
    Number of complex operations: 0
    Number of complex operations: 0
  Time to perform module allocation: 0.03 seconds


  Module allocation information for function __float_divSRT4e8m23b_127nih:
    Number of complex operations: 0
    Number of complex operations: 0
  Time to perform module allocation: 0.05 seconds


  Module allocation information for function __float_mule8m23b_127nih:
    Number of complex operations: 1
    Number of complex operations: 1
  Time to perform module allocation: 0.02 seconds


  Scheduling Information of function __float_adde8m23b_127nih:
    Number of control steps: 4
    Minimum slack: 0.14211997399999216
    Estimated max frequency (MHz): 101.44168902061249
  Time to perform scheduling: 0.03 seconds

  Number of function call sites = 6

  State Transition Graph Information of function __float_adde8m23b_127nih:
    Number of operations: 400
    Number of basic blocks: 3
    Number of states: 3
    Minimum number of cycles: 3
    Maximum number of cycles 3
    Parameters are registered
    Done port is registered
  Time to perform creation of STG: 0.00 seconds


  Scheduling Information of function __float_divSRT4e8m23b_127nih:
    Number of control steps: 5
    Minimum slack: 3.6121333143333838
    Estimated max frequency (MHz): 156.54678615066362
  Time to perform scheduling: 0.02 seconds

  Number of function call sites = 2

  State Transition Graph Information of function __float_divSRT4e8m23b_127nih:
    Number of operations: 230
    Number of basic blocks: 5
    Number of states: 3
    Done port is registered
  Time to perform creation of STG: 0.00 seconds


  Scheduling Information of function __float_mule8m23b_127nih:
    Number of control steps: 4
    Minimum slack: 0.14046665266666675
    Estimated max frequency (MHz): 101.4246785087923
  Time to perform scheduling: 0.01 seconds

  Number of function call sites = 12

  State Transition Graph Information of function __float_mule8m23b_127nih:
    Number of operations: 124
    Number of basic blocks: 3
    Number of states: 3
    Minimum number of cycles: 3
    Maximum number of cycles 3
    Parameters are registered
    Done port is registered
  Time to perform creation of STG: 0.01 seconds


  Easy binding information for function __float_adde8m23b_127nih:
    Bound operations:345/400
  Time to perform easy binding: 0.00 seconds


  Easy binding information for function __float_divSRT4e8m23b_127nih:
    Bound operations:155/230
  Time to perform easy binding: 0.00 seconds


  Easy binding information for function __float_mule8m23b_127nih:
    Bound operations:105/124
  Time to perform easy binding: 0.00 seconds


  Storage Value Information of function __float_adde8m23b_127nih:
    Number of storage values inserted: 47
  Time to compute storage value information: 0.00 seconds


  Storage Value Information of function __float_divSRT4e8m23b_127nih:
    Number of storage values inserted: 21
  Time to compute storage value information: 0.00 seconds


  Storage Value Information of function __float_mule8m23b_127nih:
    Number of storage values inserted: 6
  Time to compute storage value information: 0.00 seconds

  Slack computed in 0.00 seconds
  Weight computation completed in 0.00 seconds
  False-loop computation completed in 0.00 seconds
  Iteration 0 completed in 0.00 seconds

  Register binding information for function __float_adde8m23b_127nih:
    Register allocation algorithm obtains an optimal result: 47 registers
  Time to perform register binding: 0.00 seconds

  Iteration 1 completed in 0.00 seconds
  Clique covering computation completed in 0.00 seconds

  Module binding information for function __float_adde8m23b_127nih:
    Number of modules instantiated: 400
    Number of performance conflicts: 28
    Estimated resources area (no Muxes and address logic): 4806
    Estimated area of MUX21: 0
    Total estimated area: 4806
    Estimated number of DSPs: 0
  Time to perform module binding: 0.01 seconds


  Register binding information for function __float_adde8m23b_127nih:
    Register allocation algorithm obtains an optimal result: 47 registers
  Time to perform register binding: 0.00 seconds

  Total number of flip-flops in function __float_adde8m23b_127nih: 189
  All registers are without enable: function pipelining may come for free
  Resources are not shared in function __float_adde8m23b_127nih: function pipelining may come for free
  Slack computed in 0.00 seconds
  Weight computation completed in 0.00 seconds
  False-loop computation completed in 0.00 seconds
  Iteration 0 completed in 0.00 seconds

  Register binding information for function __float_divSRT4e8m23b_127nih:
    Register allocation algorithm obtains a sub-optimal result: 18 registers(LB:17)
  Time to perform register binding: 0.00 seconds

  Iteration 1 completed in 0.00 seconds
  Clique covering computation completed in 0.00 seconds

  Module binding information for function __float_divSRT4e8m23b_127nih:
    Number of modules instantiated: 230
    Number of performance conflicts: 0
    Estimated resources area (no Muxes and address logic): 2088
    Estimated area of MUX21: 0
    Total estimated area: 2088
    Estimated number of DSPs: 0
  Time to perform module binding: 0.00 seconds


  Register binding information for function __float_divSRT4e8m23b_127nih:
    Register allocation algorithm obtains a sub-optimal result: 18 registers(LB:17)
  Time to perform register binding: 0.00 seconds


  Connection Binding Information for function __float_divSRT4e8m23b_127nih:
    Number of allocated multiplexers (2-to-1 equivalent): 4
  Time to perform interconnection binding: 0.01 seconds

  Total number of flip-flops in function __float_divSRT4e8m23b_127nih: 472
  Slack computed in 0.01 seconds
  Weight computation completed in 0.00 seconds
  False-loop computation completed in 0.00 seconds
  Iteration 0 completed in 0.00 seconds

  Register binding information for function __float_mule8m23b_127nih:
    Register allocation algorithm obtains an optimal result: 6 registers
  Time to perform register binding: 0.00 seconds

  Iteration 1 completed in 0.00 seconds
  Clique covering computation completed in 0.00 seconds

  Module binding information for function __float_mule8m23b_127nih:
    Number of modules instantiated: 124
    Number of performance conflicts: 0
    Estimated resources area (no Muxes and address logic): 1401
    Estimated area of MUX21: 0
    Total estimated area: 1401
    Estimated number of DSPs: 3
  Time to perform module binding: 0.01 seconds


  Register binding information for function __float_mule8m23b_127nih:
    Register allocation algorithm obtains an optimal result: 6 registers
  Time to perform register binding: 0.00 seconds

  Total number of flip-flops in function __float_mule8m23b_127nih: 99
  All registers are without enable: function pipelining may come for free
  Resources are not shared in function __float_mule8m23b_127nih: function pipelining may come for free

  Module allocation information for function invert_matrix:
    Number of complex operations: 154
    Number of complex operations: 154
  Time to perform module allocation: 0.17 seconds


  Scheduling Information of function invert_matrix:
    Number of control steps: 156
    Minimum slack: 0.14046665066671632
    Estimated max frequency (MHz): 101.42467848821887
  Time to perform scheduling: 0.13 seconds

  Number of function call sites = 0

  State Transition Graph Information of function invert_matrix:
    Number of operations: 1698
    Number of basic blocks: 55
    Number of states: 156
    Done port is registered
  Time to perform creation of STG: 0.02 seconds


  Easy binding information for function invert_matrix:
    Bound operations:1058/1698
  Time to perform easy binding: 0.00 seconds


  Storage Value Information of function invert_matrix:
    Number of storage values inserted: 341
  Time to compute storage value information: 0.00 seconds

  Slack computed in 0.01 seconds
  Weight computation completed in 0.04 seconds
  False-loop computation completed in 0.00 seconds
  Iteration 0 completed in 0.01 seconds

  Register binding information for function invert_matrix:
    Register allocation algorithm obtains a sub-optimal result: 298 registers(LB:77)
  Time to perform register binding: 0.07 seconds

  Iteration 1 completed in 0.02 seconds
  Clique covering computation completed in 0.10 seconds

  Module binding information for function invert_matrix:
    Number of modules instantiated: 1582
    Number of performance conflicts: 124
    Estimated resources area (no Muxes and address logic): 37772
    Estimated area of MUX21: 1639
    Total estimated area: 39411
    Estimated number of DSPs: 18
  Time to perform module binding: 0.17 seconds


  Register binding information for function invert_matrix:
    Register allocation algorithm obtains a sub-optimal result: 298 registers(LB:77)
  Time to perform register binding: 0.07 seconds


  Connection Binding Information for function invert_matrix:
    Number of allocated multiplexers (2-to-1 equivalent): 191
  Time to perform interconnection binding: 0.03 seconds

  Total number of flip-flops in function invert_matrix: 7133
[0m  Parameter M_f (475564) (testvector 0) allocated at 1073741824 : reserved_mem_size = 64
Padding of 0 for parameter M_f
  Parameter M_inv_f (475565) (testvector 0) allocated at 1073741888 : reserved_mem_size = 64
Padding of 0 for parameter M_inv_f
  Parameter M_f (475564) (testvector 1) allocated at 1073741952 : reserved_mem_size = 64
Padding of 0 for parameter M_f
  Parameter M_inv_f (475565) (testvector 1) allocated at 1073742016 : reserved_mem_size = 64
Padding of 0 for parameter M_inv_f
  Parameter M_f (475564) (testvector 2) allocated at 1073742080 : reserved_mem_size = 64
Padding of 0 for parameter M_f
  Parameter M_inv_f (475565) (testvector 2) allocated at 1073742144 : reserved_mem_size = 64
Padding of 0 for parameter M_inv_f
  Parameter M_f (475564) (testvector 3) allocated at 1073742208 : reserved_mem_size = 64
Padding of 0 for parameter M_f
  Parameter M_inv_f (475565) (testvector 3) allocated at 1073742272 : reserved_mem_size = 64
Padding of 0 for parameter M_inv_f
  Parameter M_f (475564) (testvector 4) allocated at 1073742336 : reserved_mem_size = 64
Padding of 0 for parameter M_f
  Parameter M_inv_f (475565) (testvector 4) allocated at 1073742400 : reserved_mem_size = 64
Padding of 0 for parameter M_inv_f
  Parameter M_f (475564) (testvector 5) allocated at 1073742464 : reserved_mem_size = 64
Padding of 0 for parameter M_f
  Parameter M_inv_f (475565) (testvector 5) allocated at 1073742528 : reserved_mem_size = 64
Padding of 0 for parameter M_inv_f
  Parameter M_f (475564) (testvector 6) allocated at 1073742592 : reserved_mem_size = 64
Padding of 0 for parameter M_f
  Parameter M_inv_f (475565) (testvector 6) allocated at 1073742656 : reserved_mem_size = 64
Padding of 0 for parameter M_inv_f
  Parameter M_f (475564) (testvector 7) allocated at 1073742720 : reserved_mem_size = 64
Padding of 0 for parameter M_f
  Parameter M_inv_f (475565) (testvector 7) allocated at 1073742784 : reserved_mem_size = 64
Padding of 0 for parameter M_inv_f
  C-based testbench generation for function invert_matrix: /home/zero/Desktop/COaT_project/MatrixInversion/synthesis_no_opt/HLS_output//simulation/values.c
  Prepared testbench
clang-12: warning: optimization flag '-ffloat-store' is not supported [-Wignored-optimization-argument]
clang-12: warning: optimization flag '-fexcess-precision=standard' is not supported [-Wignored-optimization-argument]
clang-12: warning: optimization flag '-ffloat-store' is not supported [-Wignored-optimization-argument]
clang-12: warning: optimization flag '-fexcess-precision=standard' is not supported [-Wignored-optimization-argument]

  Summary of resources:
     - ADDRESS_DECODING_LOGIC_NN: 2
     - ARRAY_1D_STD_BRAM_NN: 2
     - ARRAY_1D_STD_BRAM_NN_SP: 2
     - ARRAY_1D_STD_DISTRAM_NN_SDS: 16
     - ASSIGN_UNSIGNED_FU: 5
     - BMEMORY_CTRLN: 1
     - BRAM_MEMORY_CORE_SMALL: 2
     - BRAM_MEMORY_NN_CORE: 2
     - IIdata_converter_FU: 4
     - IUdata_converter_FU: 6
     - MUX_GATE: 195
     - OR_GATE: 4
     - TRUE_DUAL_PORT_BYTE_ENABLING_RAM: 2
     - UIdata_converter_FU: 8
     - UUdata_converter_FU: 299
     - addr_expr_FU: 18
     - bus_merger: 2
     - constant_value: 256
     - flipflop_AR: 4
     - join_signal: 4
     - lshift_expr_FU: 2
     - lt_expr_FU: 1
     - lut_expr_FU: 190
     - multi_read_cond_FU: 3
     - read_cond_FU: 38
     - register_SE: 264
     - register_STD: 117
     - rshift_expr_FU: 4
     - split_signal: 2
     - ui_bit_and_expr_FU: 101
     - ui_bit_ior_concat_expr_FU: 31
     - ui_bit_ior_expr_FU: 50
     - ui_bit_xor_expr_FU: 5
     - ui_cond_expr_FU: 35
     - ui_eq_expr_FU: 45
     - ui_extract_bit_expr_FU: 466
     - ui_lshift_expr_FU: 184
     - ui_lt_expr_FU: 5
     - ui_minus_expr_FU: 2
     - ui_mult_expr_FU: 8
     - ui_ne_expr_FU: 15
     - ui_negate_expr_FU: 3
     - ui_plus_expr_FU: 94
     - ui_pointer_plus_expr_FU: 59
     - ui_rshift_expr_FU: 140
     - ui_ternary_mp_expr_FU: 1
     - ui_ternary_plus_expr_FU: 2
     - ui_ternary_pm_expr_FU: 1
Start reading vector           1's values from input file.

Reading of vector values from input file completed. Simulation started.
Simulation ended after                 1398 cycles.

Simulation completed with success

Start reading vector           2's values from input file.

Reading of vector values from input file completed. Simulation started.
Simulation ended after                 1370 cycles.

Simulation completed with success

Start reading vector           3's values from input file.

Reading of vector values from input file completed. Simulation started.
Simulation ended after                 1314 cycles.

Simulation completed with success

Start reading vector           4's values from input file.

Reading of vector values from input file completed. Simulation started.
Simulation ended after                 1342 cycles.

Simulation completed with success

Start reading vector           5's values from input file.

Reading of vector values from input file completed. Simulation started.
Simulation ended after                 1398 cycles.

Simulation completed with success

Start reading vector           6's values from input file.

Reading of vector values from input file completed. Simulation started.
Simulation ended after                 1370 cycles.

Simulation completed with success

Start reading vector           7's values from input file.

Reading of vector values from input file completed. Simulation started.
Simulation ended after                 1342 cycles.

Simulation completed with success

Start reading vector           8's values from input file.

Reading of vector values from input file completed. Simulation started.
Simulation ended after                 1342 cycles.

Simulation completed with success

No more values found. Simulation(s) executed:           8.

- /home/zero/Desktop/COaT_project/MatrixInversion/synthesis_no_opt/HLS_output//simulation/testbench_invert_matrix_tb.v:249: Verilog $finish
No more values found. Simulation(s) executed:           8.

- /home/zero/Desktop/COaT_project/MatrixInversion/synthesis_no_opt/HLS_output//simulation/testbench_invert_matrix_tb.v:290: Verilog $finish
- /home/zero/Desktop/COaT_project/MatrixInversion/synthesis_no_opt/HLS_output//simulation/testbench_invert_matrix_tb.v:290: Second verilog $finish, exiting
1. Simulation completed with SUCCESS; Execution time 1398 cycles;
2. Simulation completed with SUCCESS; Execution time 1370 cycles;
3. Simulation completed with SUCCESS; Execution time 1314 cycles;
4. Simulation completed with SUCCESS; Execution time 1342 cycles;
5. Simulation completed with SUCCESS; Execution time 1398 cycles;
6. Simulation completed with SUCCESS; Execution time 1370 cycles;
7. Simulation completed with SUCCESS; Execution time 1342 cycles;
8. Simulation completed with SUCCESS; Execution time 1342 cycles;
Analyzing Xilinx synthesis results
  Total cycles             : 10876 cycles
  Number of executions     : 8
  Average execution        : 1359 cycles
  Slices                   : 2140
  Luts                     : 6020
  Lut FF Pairs             : 6020
  Power                    : 0.37
  Registers                : 4047
  DSPs                     : 12
  BRAMs                    : 4
  Clock period             : 10
  Design minimum period    : 12.645
  Design slack             : -2.6449999999999996
  Frequency                : 79.08264136022143
  AreaxTime                : 103451.0211
  Time                     : 17.184555
  Tot. Time                : 137.52701999999999
