 ==  Bambu executed with: /tmp/.mount_bambu-Yf8Id0/usr/bin/bambu --use-raw -v 2 --top-fname=test --compiler=I386_CLANG12 -lm --simulate --simulator=VERILATOR --verilator-parallel --parallel-backend --evaluation --device-name=xc7vx690t-3ffg1930-VVD ../test.ll 


********************************************************************************
                    ____                  _
                   | __ )  __ _ _ __ ___ | |_   _   _
                   |  _ \ / _` | '_ ` _ \| '_ \| | | |
                   | |_) | (_| | | | | | | |_) | |_| |
                   |____/ \__,_|_| |_| |_|_.__/ \__,_|

********************************************************************************
                         High-Level Synthesis Tool

                         Politecnico di Milano - DEIB
                          System Architectures Group
********************************************************************************
                Copyright (C) 2004-2023 Politecnico di Milano
 Version: PandA 2023.1 - Revision 04336c437a53bc96ae90b74052c455629946ec8b-main

Parameters parsed in 0.14 seconds

Target technology = FPGA
Library Name     : STD_FU
  Total cells    : 3
  - combinational: 0
  - others: 3

Library Name     : STD_FU
  Total cells    : 10
  - combinational: 0
  - others: 10

Library Name     : STD_FU
  Total cells    : 33
  - combinational: 0
  - others: 33

Library Name     : STD_FU
  Total cells    : 8
  - combinational: 0
  - others: 8

Library Name     : STD_FU
  Total cells    : 56
  - combinational: 0
  - others: 56

Library Name     : STD_FU
  Total cells    : 1
  - combinational: 0
  - others: 1

Library Name     : CS_COMPONENT
  Total cells    : 16
  - combinational: 0
  - others: 16

Library Name     : STD_FU
  Total cells    : 2
  - combinational: 0
  - others: 2

Library Name     : STD_FU
  Total cells    : 0
  - combinational: 0
  - others: 0

Library Name     : STD_FU
  Total cells    : 3
  - combinational: 0
  - others: 3

Library Name     : STD_FU
  Total cells    : 21
  - combinational: 0
  - others: 21

Library Name     : STD
  Total cells    : 14
  - combinational: 0
  - others: 14

Library Name     : STD_COMMON
  Total cells    : 57
  - combinational: 0
  - others: 57

Library Name     : STD_FU
  Total cells    : 28
  - combinational: 0
  - others: 28

Library Name     : STD_PC
  Total cells    : 16
  - combinational: 0
  - others: 16

Library Name     : STD_SOFT_FLOAT
  Total cells    : 2
  - combinational: 0
  - others: 2

Library Name     : STD
  Total cells    : 72
  - combinational: 0
  - others: 72

Library Name     : STD_FU
  Total cells    : 2
  - combinational: 0
  - others: 2

Library Name     : STD_FU
  Total cells    : 9
  - combinational: 0
  - others: 9

Library Name     : WBWrapper
  Total cells    : 12
  - combinational: 0
  - others: 12

Available devices:
 - 5CSEMA5F31C6
 - 5SGXEA7N2F45C1
 - EP2C70F896C6
 - EP2C70F896C6-R
 - EP4SGX530KH40C2
 - LFE335EA8FN484C
 - LFE5U85F8BG756C
 - LFE5UM85F8BG756C
 - asap7-BC
 - asap7-TC
 - asap7-WC
 - nangate45
 - nx1h140tsp
 - nx1h35S
 - nx2h540tsc
 - xc4vlx100-10ff1513
 - xc5vlx110t-1ff1136
 - xc5vlx330t-2ff1738
 - xc5vlx50-3ff1153
 - xc6vlx240t-1ff1156
 - xc7a100t-1csg324-VVD
 - xc7vx330t-1ffg1157
 - xc7vx485t-2ffg1761-VVD
 - xc7vx690t-3ffg1930-VVD
 - xc7z020-1clg484
 - xc7z020-1clg484-VVD
 - xc7z020-1clg484-YOSYS-VVD
 - xc7z045-2ffg900-VVD
 - xcku060-3ffva1156-VVD
 - xcu280-2Lfsvh2892-VVD
Library Name     : STD_FU
  Total cells    : 3911
  - combinational: 0
  - others: 3911

warning: overriding the module target triple with i386-unknown-linux-gnu [-Woverride-module]
1 warning generated.
warning: overriding the module target triple with i386-unknown-linux-gnu [-Woverride-module]
1 warning generated.
  Bit Value Opt: bit_and_expr optimized, nbits = 63
  Bit Value Opt: lt_expr optimized, nbits = 15
  Bit Value Opt: cond_expr optimized, nbits = 52
  Bit Value Opt: plus_expr optimized, nbits = 7
  Bit Value Opt: plus_expr optimized, nbits = 52
  Bit Value Opt: bit_and_expr optimized, nbits = 31
  Bit Value Opt: bit_and_expr optimized, nbits = 31
  Bit Value Opt: bit_and_expr optimized, nbits = 16
  Bit Value Opt: eq_expr optimized, nbits = 16
  Bit Value Opt: bit_and_expr optimized, nbits = 2
  Bit Value Opt: eq_expr optimized, nbits = 2
  Bit Value Opt: cond_expr optimized, nbits = 1
  Bit Value Opt: cond_expr optimized, nbits = 2
  Bit Value Opt: cond_expr optimized, nbits = 4
  Bit Value Opt: plus_expr optimized, nbits = 27
  Bit Value Opt: bit_and_expr optimized, nbits = 29
  Bit Value Opt: bit_xor_expr optimized, nbits = 24
  Bit Value Opt: bit_and_expr optimized, nbits = 24
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: bit_and_expr optimized, nbits = 1
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: cond_expr optimized, nbits = 1
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: cond_expr optimized, nbits = 2
  Bit Value Opt: cond_expr optimized, nbits = 2
  Bit Value Opt: cond_expr optimized, nbits = 3
  Bit Value Opt: cond_expr optimized, nbits = 2
  Bit Value Opt: cond_expr optimized, nbits = 3
  Bit Value Opt: cond_expr optimized, nbits = 4
  Bit Value Opt: cond_expr optimized, nbits = 5
  Bit Value Opt: bit_xor_expr optimized, nbits = 2
  Bit Value Opt: bit_and_expr optimized, nbits = 2
  Bit Value Opt: ne_expr optimized, nbits = 2
  Bit Value Opt: plus_expr optimized, nbits = 2
  Bit Value Opt: bit_and_expr optimized, nbits = 24
  Bit Value Opt: eq_expr optimized, nbits = 24
  Bit Value Opt: bit_and_expr optimized, nbits = 40
  Bit Value Opt: eq_expr optimized, nbits = 40
  Bit Value Opt: bit_and_expr optimized, nbits = 48
  Bit Value Opt: eq_expr optimized, nbits = 48
  Bit Value Opt: bit_and_expr optimized, nbits = 52
  Bit Value Opt: eq_expr optimized, nbits = 52
  Bit Value Opt: bit_and_expr optimized, nbits = 54
  Bit Value Opt: eq_expr optimized, nbits = 54
  Bit Value Opt: bit_and_expr optimized, nbits = 55
  Bit Value Opt: eq_expr optimized, nbits = 55
  Bit Value Opt: bit_and_expr optimized, nbits = 55
  Bit Value Opt: ne_expr optimized, nbits = 55
  Bit Value Opt: cond_expr optimized, nbits = 1
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: cond_expr optimized, nbits = 2
  Bit Value Opt: cond_expr optimized, nbits = 2
  Bit Value Opt: cond_expr optimized, nbits = 3
  Bit Value Opt: cond_expr optimized, nbits = 2
  Bit Value Opt: cond_expr optimized, nbits = 3
  Bit Value Opt: cond_expr optimized, nbits = 4
  Bit Value Opt: cond_expr optimized, nbits = 5
  Bit Value Opt: bit_xor_expr optimized, nbits = 2
  Bit Value Opt: bit_and_expr optimized, nbits = 2
  Bit Value Opt: ne_expr optimized, nbits = 2
  Bit Value Opt: plus_expr optimized, nbits = 2
  Bit Value Opt: bit_and_expr optimized, nbits = 11
  Bit Value Opt: eq_expr optimized, nbits = 11
  Bit Value Opt: bit_and_expr optimized, nbits = 19
  Bit Value Opt: eq_expr optimized, nbits = 19
  Bit Value Opt: bit_and_expr optimized, nbits = 23
  Bit Value Opt: eq_expr optimized, nbits = 23
  Bit Value Opt: bit_and_expr optimized, nbits = 25
  Bit Value Opt: eq_expr optimized, nbits = 25
  Bit Value Opt: bit_and_expr optimized, nbits = 26
  Bit Value Opt: eq_expr optimized, nbits = 26
  Bit Value Opt: bit_and_expr optimized, nbits = 26
  Bit Value Opt: ne_expr optimized, nbits = 26
  Bit Value Opt: cond_expr optimized, nbits = 1
  Bit Value Opt: cond_expr optimized, nbits = 1
  Bit Value Opt: cond_expr optimized, nbits = 1
  Bit Value Opt: cond_expr optimized, nbits = 1
  Bit Value Opt: minus_expr optimized, nbits = 1
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: bit_and_expr optimized, nbits = 2
  Bit Value Opt: eq_expr optimized, nbits = 2
  Bit Value Opt: bit_and_expr optimized, nbits = 1
  Bit Value Opt: cond_expr optimized, nbits = 1
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: cond_expr optimized, nbits = 2
  Bit Value Opt: plus_expr optimized, nbits = 2
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: plus_expr optimized, nbits = 3
  Bit Value Opt: plus_expr optimized, nbits = 2
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: plus_expr optimized, nbits = 4
  Bit Value Opt: plus_expr optimized, nbits = 3
  Bit Value Opt: plus_expr optimized, nbits = 2
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: cond_expr optimized, nbits = 5
  Bit Value Opt: plus_expr optimized, nbits = 4
  Bit Value Opt: plus_expr optimized, nbits = 5
  Bit Value Opt: plus_expr optimized, nbits = 3
  Bit Value Opt: plus_expr optimized, nbits = 2
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: bit_and_expr optimized, nbits = 2
  Bit Value Opt: eq_expr optimized, nbits = 2
  Bit Value Opt: bit_and_expr optimized, nbits = 1
  Bit Value Opt: cond_expr optimized, nbits = 1
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: cond_expr optimized, nbits = 2
  Bit Value Opt: plus_expr optimized, nbits = 2
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: plus_expr optimized, nbits = 3
  Bit Value Opt: plus_expr optimized, nbits = 2
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: plus_expr optimized, nbits = 4
  Bit Value Opt: plus_expr optimized, nbits = 3
  Bit Value Opt: plus_expr optimized, nbits = 2
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: cond_expr optimized, nbits = 5
  Bit Value Opt: plus_expr optimized, nbits = 4
  Bit Value Opt: plus_expr optimized, nbits = 5
  Bit Value Opt: plus_expr optimized, nbits = 3
  Bit Value Opt: plus_expr optimized, nbits = 2
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: cond_expr optimized, nbits = 1
  Bit Value Opt: bit_and_expr optimized, nbits = 1
  Bit Value Opt: bit_xor_expr optimized, nbits = 1
  Bit Value Opt: bit_and_expr optimized, nbits = 1
  Bit Value Opt: minus_expr optimized, nbits = 1
  Bit Value Opt: bit_and_expr optimized, nbits = 1
  Bit Value Opt: bit_and_expr optimized, nbits = 1
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: bit_and_expr optimized, nbits = 51
  Bit Value Opt: ne_expr optimized, nbits = 51
  Bit Value Opt: bit_and_expr optimized, nbits = 4
  Bit Value Opt: bit_and_expr optimized, nbits = 4
  Bit Value Opt: bit_and_expr optimized, nbits = 1
  Bit Value Opt: bit_and_expr optimized, nbits = 2
  Bit Value Opt: bit_and_expr optimized, nbits = 1
  Bit Value Opt: bit_and_expr optimized, nbits = 3
  Bit Value Opt: bit_and_expr optimized, nbits = 2
  Bit Value Opt: bit_and_expr optimized, nbits = 1
  Bit Value Opt: bit_and_expr optimized, nbits = 3
  Bit Value Opt: bit_and_expr optimized, nbits = 3
  Bit Value Opt: bit_and_expr optimized, nbits = 2
  Bit Value Opt: bit_and_expr optimized, nbits = 1
  Bit Value Opt: bit_and_expr optimized, nbits = 4
  Bit Value Opt: bit_and_expr optimized, nbits = 4
  Bit Value Opt: bit_and_expr optimized, nbits = 1
  Bit Value Opt: bit_and_expr optimized, nbits = 2
  Bit Value Opt: bit_and_expr optimized, nbits = 1
  Bit Value Opt: bit_and_expr optimized, nbits = 3
  Bit Value Opt: bit_and_expr optimized, nbits = 2
  Bit Value Opt: bit_and_expr optimized, nbits = 1
  Bit Value Opt: bit_and_expr optimized, nbits = 3
  Bit Value Opt: bit_and_expr optimized, nbits = 3
  Bit Value Opt: bit_and_expr optimized, nbits = 2
  Bit Value Opt: bit_and_expr optimized, nbits = 1
  Bit Value Opt: bit_and_expr optimized, nbits = 1
  Bit Value Opt: minus_expr optimized, nbits = 1
  Bit Value Opt: bit_and_expr optimized, nbits = 55
  Bit Value Opt: ne_expr optimized, nbits = 55
  Bit Value Opt: cond_expr optimized, nbits = 1
  Bit Value Opt: cond_expr optimized, nbits = 1
  Bit Value Opt: cond_expr optimized, nbits = 1
  Bit Value Opt: cond_expr optimized, nbits = 1
  Bit Value Opt: minus_expr optimized, nbits = 1
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: bit_and_expr optimized, nbits = 2
  Bit Value Opt: eq_expr optimized, nbits = 2
  Bit Value Opt: bit_and_expr optimized, nbits = 1
  Bit Value Opt: cond_expr optimized, nbits = 1
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: cond_expr optimized, nbits = 2
  Bit Value Opt: plus_expr optimized, nbits = 2
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: plus_expr optimized, nbits = 3
  Bit Value Opt: plus_expr optimized, nbits = 2
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: plus_expr optimized, nbits = 4
  Bit Value Opt: plus_expr optimized, nbits = 3
  Bit Value Opt: plus_expr optimized, nbits = 2
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: plus_expr optimized, nbits = 4
  Bit Value Opt: plus_expr optimized, nbits = 5
  Bit Value Opt: plus_expr optimized, nbits = 3
  Bit Value Opt: plus_expr optimized, nbits = 2
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: bit_and_expr optimized, nbits = 2
  Bit Value Opt: eq_expr optimized, nbits = 2
  Bit Value Opt: bit_and_expr optimized, nbits = 1
  Bit Value Opt: cond_expr optimized, nbits = 1
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: cond_expr optimized, nbits = 2
  Bit Value Opt: plus_expr optimized, nbits = 2
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: plus_expr optimized, nbits = 3
  Bit Value Opt: plus_expr optimized, nbits = 2
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: plus_expr optimized, nbits = 4
  Bit Value Opt: plus_expr optimized, nbits = 3
  Bit Value Opt: plus_expr optimized, nbits = 2
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: plus_expr optimized, nbits = 4
  Bit Value Opt: plus_expr optimized, nbits = 5
  Bit Value Opt: plus_expr optimized, nbits = 3
  Bit Value Opt: plus_expr optimized, nbits = 2
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: cond_expr optimized, nbits = 1
  Bit Value Opt: bit_and_expr optimized, nbits = 1
  Bit Value Opt: bit_xor_expr optimized, nbits = 1
  Bit Value Opt: bit_and_expr optimized, nbits = 1
  Bit Value Opt: minus_expr optimized, nbits = 1
  Bit Value Opt: bit_and_expr optimized, nbits = 1
  Bit Value Opt: bit_and_expr optimized, nbits = 1
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: bit_and_expr optimized, nbits = 22
  Bit Value Opt: ne_expr optimized, nbits = 22
  Bit Value Opt: bit_and_expr optimized, nbits = 9
  Bit Value Opt: bit_and_expr optimized, nbits = 1
  Bit Value Opt: bit_and_expr optimized, nbits = 1
  Bit Value Opt: bit_and_expr optimized, nbits = 1
  Bit Value Opt: bit_and_expr optimized, nbits = 1
  Bit Value Opt: bit_and_expr optimized, nbits = 1
  Bit Value Opt: bit_and_expr optimized, nbits = 2
  Bit Value Opt: bit_and_expr optimized, nbits = 1
  Bit Value Opt: bit_and_expr optimized, nbits = 3
  Bit Value Opt: bit_and_expr optimized, nbits = 2
  Bit Value Opt: bit_and_expr optimized, nbits = 1
  Bit Value Opt: bit_and_expr optimized, nbits = 3
  Bit Value Opt: bit_and_expr optimized, nbits = 3
  Bit Value Opt: bit_and_expr optimized, nbits = 2
  Bit Value Opt: bit_and_expr optimized, nbits = 1
  Bit Value Opt: bit_and_expr optimized, nbits = 9
  Bit Value Opt: bit_and_expr optimized, nbits = 1
  Bit Value Opt: bit_and_expr optimized, nbits = 1
  Bit Value Opt: bit_and_expr optimized, nbits = 1
  Bit Value Opt: bit_and_expr optimized, nbits = 1
  Bit Value Opt: bit_and_expr optimized, nbits = 1
  Bit Value Opt: bit_and_expr optimized, nbits = 2
  Bit Value Opt: bit_and_expr optimized, nbits = 1
  Bit Value Opt: bit_and_expr optimized, nbits = 3
  Bit Value Opt: bit_and_expr optimized, nbits = 2
  Bit Value Opt: bit_and_expr optimized, nbits = 1
  Bit Value Opt: bit_and_expr optimized, nbits = 3
  Bit Value Opt: bit_and_expr optimized, nbits = 3
  Bit Value Opt: bit_and_expr optimized, nbits = 2
  Bit Value Opt: bit_and_expr optimized, nbits = 1
  Bit Value Opt: bit_and_expr optimized, nbits = 1
  Bit Value Opt: minus_expr optimized, nbits = 1
  Bit Value Opt: bit_and_expr optimized, nbits = 26
  Bit Value Opt: ne_expr optimized, nbits = 26
  Bit Value Opt: bit_xor_expr optimized, nbits = 52
  Bit Value Opt: bit_and_expr optimized, nbits = 52
  Bit Value Opt: eq_expr optimized, nbits = 52
  Bit Value Opt: bit_and_expr optimized, nbits = 52
  Bit Value Opt: bit_xor_expr optimized, nbits = 52
  Bit Value Opt: bit_and_expr optimized, nbits = 52
  Bit Value Opt: eq_expr optimized, nbits = 52
  Bit Value Opt: bit_and_expr optimized, nbits = 52
  Bit Value Opt: cond_expr optimized, nbits = 1
  Bit Value Opt: cond_expr optimized, nbits = 1
  Bit Value Opt: cond_expr optimized, nbits = 1
  Bit Value Opt: cond_expr optimized, nbits = 1
  Bit Value Opt: cond_expr optimized, nbits = 1
  Bit Value Opt: bit_xor_expr optimized, nbits = 1
  Bit Value Opt: bit_and_expr optimized, nbits = 1
  Bit Value Opt: ne_expr optimized, nbits = 1
  Bit Value Opt: cond_expr optimized, nbits = 1
  Bit Value Opt: bit_and_expr optimized, nbits = 51
  Bit Value Opt: ne_expr optimized, nbits = 51
  Bit Value Opt: bit_and_expr optimized, nbits = 41
  Bit Value Opt: ne_expr optimized, nbits = 41
  Bit Value Opt: bit_and_expr optimized, nbits = 12
  Bit Value Opt: ne_expr optimized, nbits = 12
  Bit Value Opt: bit_and_expr optimized, nbits = 53
  Bit Value Opt: ne_expr optimized, nbits = 53
  Bit Value Opt: cond_expr optimized, nbits = 1
  Bit Value Opt: cond_expr optimized, nbits = 1
  Bit Value Opt: cond_expr optimized, nbits = 1
  Bit Value Opt: cond_expr optimized, nbits = 1
  Bit Value Opt: cond_expr optimized, nbits = 1
  Bit Value Opt: bit_xor_expr optimized, nbits = 1
  Bit Value Opt: bit_and_expr optimized, nbits = 1
  Bit Value Opt: ne_expr optimized, nbits = 1
  Bit Value Opt: cond_expr optimized, nbits = 1
  Bit Value Opt: bit_and_expr optimized, nbits = 22
  Bit Value Opt: ne_expr optimized, nbits = 22
  Bit Value Opt: bit_and_expr optimized, nbits = 47
  Bit Value Opt: ne_expr optimized, nbits = 47
  Bit Value Opt: bit_and_expr optimized, nbits = 9
  Bit Value Opt: ne_expr optimized, nbits = 9
  Bit Value Opt: bit_and_expr optimized, nbits = 24
  Bit Value Opt: ne_expr optimized, nbits = 24
  Bit Value Opt: cond_expr optimized, nbits = 1
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: cond_expr optimized, nbits = 2
  Bit Value Opt: cond_expr optimized, nbits = 2
  Bit Value Opt: cond_expr optimized, nbits = 3
  Bit Value Opt: cond_expr optimized, nbits = 2
  Bit Value Opt: cond_expr optimized, nbits = 3
  Bit Value Opt: cond_expr optimized, nbits = 4
  Bit Value Opt: cond_expr optimized, nbits = 5
  Bit Value Opt: bit_xor_expr optimized, nbits = 2
  Bit Value Opt: bit_and_expr optimized, nbits = 2
  Bit Value Opt: ne_expr optimized, nbits = 2
  Bit Value Opt: plus_expr optimized, nbits = 2
  Bit Value Opt: bit_and_expr optimized, nbits = 24
  Bit Value Opt: eq_expr optimized, nbits = 24
  Bit Value Opt: bit_and_expr optimized, nbits = 40
  Bit Value Opt: eq_expr optimized, nbits = 40
  Bit Value Opt: bit_and_expr optimized, nbits = 48
  Bit Value Opt: eq_expr optimized, nbits = 48
  Bit Value Opt: bit_and_expr optimized, nbits = 52
  Bit Value Opt: eq_expr optimized, nbits = 52
  Bit Value Opt: bit_and_expr optimized, nbits = 54
  Bit Value Opt: eq_expr optimized, nbits = 54
  Bit Value Opt: bit_and_expr optimized, nbits = 55
  Bit Value Opt: eq_expr optimized, nbits = 55
  Bit Value Opt: bit_and_expr optimized, nbits = 55
  Bit Value Opt: ne_expr optimized, nbits = 55
  Bit Value Opt: plus_expr optimized, nbits = 21
  Bit Value Opt: cond_expr optimized, nbits = 32
  Bit Value Opt: bit_and_expr optimized, nbits = 54
  Bit Value Opt: lt_expr optimized, nbits = 54
  Bit Value Opt: bit_and_expr optimized, nbits = 16
  Bit Value Opt: eq_expr optimized, nbits = 16
  Bit Value Opt: bit_and_expr optimized, nbits = 1
  Bit Value Opt: bit_and_expr optimized, nbits = 28
  Bit Value Opt: bit_and_expr optimized, nbits = 2
  Bit Value Opt: eq_expr optimized, nbits = 2
  Bit Value Opt: cond_expr optimized, nbits = 1
  Bit Value Opt: cond_expr optimized, nbits = 2
  Bit Value Opt: cond_expr optimized, nbits = 4
  Bit Value Opt: plus_expr optimized, nbits = 24
  Bit Value Opt: bit_xor_expr optimized, nbits = 24
  Bit Value Opt: plus_expr optimized, nbits = 6
  Bit Value Opt: plus_expr optimized, nbits = 31
  Bit Value Opt: plus_expr optimized, nbits = 23
  Bit Value Opt: plus_expr optimized, nbits = 6
  Bit Value Opt: bit_and_expr optimized, nbits = 16
  Bit Value Opt: eq_expr optimized, nbits = 16
  Bit Value Opt: bit_and_expr optimized, nbits = 28
  Bit Value Opt: bit_and_expr optimized, nbits = 2
  Bit Value Opt: eq_expr optimized, nbits = 2
  Bit Value Opt: cond_expr optimized, nbits = 1
  Bit Value Opt: cond_expr optimized, nbits = 2
  Bit Value Opt: cond_expr optimized, nbits = 4
  Bit Value Opt: plus_expr optimized, nbits = 63
  Bit Value Opt: plus_expr optimized, nbits = 52
  Bit Value Opt: plus_expr optimized, nbits = 63
  Bit Value Opt: plus_expr optimized, nbits = 52
  Bit Value Opt: plus_expr optimized, nbits = 11
  Bit Value Opt: bit_and_expr optimized, nbits = 4
  Bit Value Opt: eq_expr optimized, nbits = 4
  Bit Value Opt: bit_and_expr optimized, nbits = 36
  Bit Value Opt: eq_expr optimized, nbits = 36
  Bit Value Opt: bit_and_expr optimized, nbits = 20
  Bit Value Opt: eq_expr optimized, nbits = 20
  Bit Value Opt: bit_and_expr optimized, nbits = 52
  Bit Value Opt: eq_expr optimized, nbits = 52
  Bit Value Opt: bit_and_expr optimized, nbits = 12
  Bit Value Opt: eq_expr optimized, nbits = 12
  Bit Value Opt: bit_and_expr optimized, nbits = 44
  Bit Value Opt: eq_expr optimized, nbits = 44
  Bit Value Opt: bit_and_expr optimized, nbits = 28
  Bit Value Opt: eq_expr optimized, nbits = 28
  Bit Value Opt: bit_and_expr optimized, nbits = 2
  Bit Value Opt: eq_expr optimized, nbits = 2
  Bit Value Opt: cond_expr optimized, nbits = 1
  Bit Value Opt: cond_expr optimized, nbits = 2
  Bit Value Opt: cond_expr optimized, nbits = 4
  Bit Value Opt: cond_expr optimized, nbits = 5
  Bit Value Opt: plus_expr optimized, nbits = 3
  Bit Value Opt: plus_expr optimized, nbits = 31
  Bit Value Opt: plus_expr optimized, nbits = 23
  Bit Value Opt: plus_expr optimized, nbits = 6
  Bit Value Opt: plus_expr optimized, nbits = 31
  Bit Value Opt: plus_expr optimized, nbits = 23
  Bit Value Opt: plus_expr optimized, nbits = 6
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: plus_expr optimized, nbits = 21
  Bit Value Opt: bit_and_expr optimized, nbits = 20
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: eq_expr optimized, nbits = 1
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: eq_expr optimized, nbits = 1
  Bit Value Opt: bit_and_expr optimized, nbits = 1
  Bit Value Opt: bit_and_expr optimized, nbits = 1
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: plus_expr optimized, nbits = 20
  Bit Value Opt: plus_expr optimized, nbits = 2
  Bit Value Opt: plus_expr optimized, nbits = 4
  Bit Value Opt: plus_expr optimized, nbits = 8
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: plus_expr optimized, nbits = 2
  Bit Value Opt: plus_expr optimized, nbits = 4
  Bit Value Opt: plus_expr optimized, nbits = 8
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: plus_expr optimized, nbits = 2
  Bit Value Opt: plus_expr optimized, nbits = 2
  Bit Value Opt: plus_expr optimized, nbits = 6
  Bit Value Opt: plus_expr optimized, nbits = 2
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: plus_expr optimized, nbits = 2
  Bit Value Opt: plus_expr optimized, nbits = 2
  Bit Value Opt: plus_expr optimized, nbits = 6
  Bit Value Opt: plus_expr optimized, nbits = 2
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: plus_expr optimized, nbits = 3
  Bit Value Opt: plus_expr optimized, nbits = 3
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: plus_expr optimized, nbits = 2
  Bit Value Opt: bit_and_expr optimized, nbits = 3
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: plus_expr optimized, nbits = 2
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: plus_expr optimized, nbits = 3
  Bit Value Opt: plus_expr optimized, nbits = 3
  Bit Value Opt: eq_expr optimized, nbits = 3
  Bit Value Opt: plus_expr optimized, nbits = 3
  Bit Value Opt: cond_expr optimized, nbits = 63
  Bit Value Opt: plus_expr optimized, nbits = 2
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: plus_expr optimized, nbits = 2
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: plus_expr optimized, nbits = 3
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: bit_and_expr optimized, nbits = 1
  Bit Value Opt: bit_and_expr optimized, nbits = 31
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: bit_and_expr optimized, nbits = 26
  Bit Value Opt: eq_expr optimized, nbits = 26
  Bit Value Opt: bit_and_expr optimized, nbits = 23
  Bit Value Opt: mult_expr/widen_mult_expr optimized, nbits = 7
  Bit Value Opt: mult_expr/widen_mult_expr optimized, nbits = 3
  Bit Value Opt: mult_expr/widen_mult_expr optimized, nbits = 1
  Bit Value Opt: bit_and_expr optimized, nbits = 16
  Bit Value Opt: mult_expr/widen_mult_expr optimized, nbits = 8
  Bit Value Opt: plus_expr optimized, nbits = 2
  Bit Value Opt: plus_expr optimized, nbits = 1
  Bit Value Opt: plus_expr optimized, nbits = 2
  Bit Value Opt: plus_expr optimized, nbits = 11
  Bit Value Opt: eq_expr optimized, nbits = 1
  Bit Value Opt: eq_expr optimized, nbits = 1
  Bit Value Opt: cond_expr optimized, nbits = 3
  Bit Value Opt: cond_expr optimized, nbits = 3
  Bit Value Opt: cond_expr optimized, nbits = 3
  Bit Value Opt: cond_expr optimized, nbits = 3
  Bit Value Opt: cond_expr optimized, nbits = 3
  Bit Value Opt: cond_expr optimized, nbits = 3
  Bit Value Opt: cond_expr optimized, nbits = 3
  Bit Value Opt: cond_expr optimized, nbits = 3
  Bit Value Opt: cond_expr optimized, nbits = 6
Function call to __copysigne11m52b_1023nih inlined in __internal_scalbn
Function call to __copysigne11m52b_1023nih inlined in __internal_scalbn
Function call to __copysigne11m52b_1023nih inlined in __internal_scalbn
Function call to __internal_floor inlined in __internal_cos
Function call to __fabse11m52b_1023nih inlined in __internal_cos
Function call to __float_eqe11m52b_1023nih inlined in __internal_cos
Function call to __float_eqe11m52b_1023nih inlined in __internal_cos
Function call to __float_gee11m52b_1023nih inlined in __internal_cos
Function call to __float_gee11m52b_1023nih inlined in __internal_cos
Function call to __float_adde8m23b_127nih inlined in ex0_1_s3_29fixp
Function call to __float32_to_uint32_round_to_zeroe8m23b_127nih inlined in ex0_1_s3_29fixp
Function call to __int32_to_float32e8m23b_127nih inlined in test

  Functions to be synthesized:
    __divdi3
    __internal_sqrtf
    __hide_kernel_sin
    __hide_kernel_cos
    __internal_cos
    __internal_scalbn
    test
    ex0_1_s3_29fixp
    __float64_to_int32_round_to_zeroe11m52b_1023nih
    __float_mule11m52b_1023nih
    __float_sube11m52b_1023nih
    __float_adde11m52b_1023nih
    __float_gte11m52b_1023nih
    __int32_to_float64e11m52b_1023nih
    __int64_to_float32e8m23b_127nih
    __float_mule8m23b_127nih
    __float32_to_int32_round_to_zeroe8m23b_127nih

  Adding proxy wrapper in function __internal_cos
  Adding proxy function in function __hide_kernel_sin
  Adding proxy function in function __hide_kernel_cos
  Adding proxy wrapper in function __internal_cos
  Adding proxy function in function __hide_kernel_sin
  Adding proxy function in function __hide_kernel_cos
  Adding proxy wrapper in function test
  Adding proxy function in function ex0_1_s3_29fixp
  Adding proxy wrapper in function ex0_1_s3_29fixp
  Adding proxy function in function __hide_kernel_sin
  Adding proxy function in function __hide_kernel_cos
  Adding proxy function in function __internal_cos
  Adding proxy wrapper in function ex0_1_s3_29fixp
  Adding proxy function in function __hide_kernel_sin
  Adding proxy function in function __hide_kernel_cos
  Adding proxy function in function __internal_cos
  Adding proxy function in function __internal_scalbn
  Adding proxy wrapper in function ex0_1_s3_29fixp
  Adding proxy function in function __internal_cos

  Memory allocation information:
  Sparse memory alignemnt set to 1024 bytes
    Internal variable: internal_495426 - 495426 - internal_495426 in function test
      Id: 495426
      Base Address: 1024
      Size: 400
      Is a private memory
      The variable is always accessed with the same data size
      Number of functions in which is used: 1
      Maximum number of references per function: 2
      Maximum number of loads per function: 1
    Internal variable: internal_495455 - 495455 - internal_495455 in function test
      Id: 495455
      Base Address: 1024
      Size: 400
      Is a private memory
      The variable is always accessed with the same data size
      Number of functions in which is used: 1
      Maximum number of references per function: 2
      Maximum number of loads per function: 1
    Internal variable: internal_495480 - 495480 - internal_495480 in function test
      Id: 495480
      Base Address: 1024
      Size: 400
      Is a private memory
      The variable is always accessed with the same data size
      Number of functions in which is used: 1
      Maximum number of references per function: 2
      Maximum number of loads per function: 1
    Internal variable: internal_495505 - 495505 - internal_495505 in function test
      Id: 495505
      Base Address: 1024
      Size: 400
      Is a private memory
      The variable is always accessed with the same data size
      Number of functions in which is used: 1
      Maximum number of references per function: 2
      Maximum number of loads per function: 1
    Internal variable: internal_495529 - 495529 - internal_495529 in function test
      Id: 495529
      Base Address: 1024
      Size: 400
      Is a private memory
      The variable is always accessed with the same data size
      Number of functions in which is used: 1
      Maximum number of references per function: 2
      Maximum number of loads per function: 1
    Internal variable: __hide_ieee754_rem_pio2_two_over_pi - 429099 - __hide_ieee754_rem_pio2_two_over_pi in function __internal_cos
      Id: 429099
      Base Address: 1024
      Size: 264
      Is a private memory
      Is a Read Only Memory
      The variable is always accessed with the same data size
      Number of functions in which is used: 1
      Maximum number of references per function: 2
      Maximum number of loads per function: 2
    Internal variable: __hide_ieee754_rem_pio2_npio2_hw - 431122 - __hide_ieee754_rem_pio2_npio2_hw in function __internal_cos
      Id: 431122
      Base Address: 1024
      Size: 128
      Is a private memory
      Is a Read Only Memory
      The variable is always accessed with the same data size
      Number of functions in which is used: 1
      Maximum number of references per function: 1
      Maximum number of loads per function: 1
    Internal variable: internal_431756 - 431756 - internal_431756 in function __internal_cos
      Id: 431756
      Base Address: 1024
      Size: 24
      Is a private memory
      The variable is always accessed with the same data size
      Number of functions in which is used: 1
      Maximum number of references per function: 10
      Maximum number of loads per function: 7
    Internal variable: internal_431845 - 431845 - internal_431845 in function __internal_cos
      Id: 431845
      Base Address: 1024
      Size: 160
      Is a private memory
      The variable is always accessed with the same data size
      Number of functions in which is used: 1
      Maximum number of references per function: 19
      Maximum number of loads per function: 17
    Internal variable: internal_431962 - 431962 - internal_431962 in function __internal_cos
      Id: 431962
      Base Address: 1024
      Size: 160
      Is a private memory
      The variable is always accessed with the same data size
      Number of functions in which is used: 1
      Maximum number of references per function: 23
      Maximum number of loads per function: 9
    Internal variable: internal_432381 - 432381 - internal_432381 in function __internal_cos
      Id: 432381
      Base Address: 1024
      Size: 80
      Is a private memory
      The variable is always accessed with the same data size
      Number of functions in which is used: 1
      Maximum number of references per function: 32
      Maximum number of loads per function: 21
    Internal variable: internal_433128 - 433128 - internal_433128 in function __internal_cos
      Id: 433128
      Base Address: 1024
      Size: 160
      Is a private memory
      The variable is always accessed with the same data size
      Number of functions in which is used: 1
      Maximum number of references per function: 12
      Maximum number of loads per function: 11
    Internal variable: sqrtf_a1 - 408269 - sqrtf_a1 in function __internal_sqrtf
      Id: 408269
      Base Address: 1024
      Size: 1024
      Is a private memory
      Is a Read Only Memory
      The variable is always accessed with the same data size
      Number of functions in which is used: 1
      Maximum number of references per function: 1
      Maximum number of loads per function: 1
    Internal variable: sqrtf_a2 - 408835 - sqrtf_a2 in function __internal_sqrtf
      Id: 408835
      Base Address: 1024
      Size: 512
      Is a private memory
      Is a Read Only Memory
      The variable is always accessed with the same data size
      Number of functions in which is used: 1
      Maximum number of references per function: 1
      Maximum number of loads per function: 1
    Internal variable: sqrtf_a0 - 409049 - sqrtf_a0 in function __internal_sqrtf
      Id: 409049
      Base Address: 1024
      Size: 1024
      Is a private memory
      Is a Read Only Memory
      The variable is always accessed with the same data size
      Number of functions in which is used: 1
      Maximum number of references per function: 1
      Maximum number of loads per function: 1
Warning: This function uses unknown addresses: test
    BRAM bitsize: 32
    Spec may not exploit DATA bus width
    Spec accesses data having an address unknown at compile time
    Internal data is not externally accessible
    DATA bus bitsize: 64
    ADDRESS bus bitsize: 32
    SIZE bus bitsize: 7
    Internally allocated memory (no private memories): 0
    Internally allocated memory: 5536
  Time to perform memory allocation: 0.00 seconds


  Module allocation information for function __divdi3:
    Number of complex operations: 0
    Number of complex operations: 0
  Time to perform module allocation: 0.01 seconds


  Module allocation information for function __float32_to_int32_round_to_zeroe8m23b_127nih:
    Number of complex operations: 0
    Number of complex operations: 0
  Time to perform module allocation: 0.01 seconds


  Module allocation information for function __float64_to_int32_round_to_zeroe11m52b_1023nih:
    Number of complex operations: 0
    Number of complex operations: 0
  Time to perform module allocation: 0.01 seconds


  Module allocation information for function __float_adde11m52b_1023nih:
    Number of complex operations: 0
    Number of complex operations: 0
  Time to perform module allocation: 0.04 seconds


  Module allocation information for function __float_gte11m52b_1023nih:
    Number of complex operations: 0
    Number of complex operations: 0
  Time to perform module allocation: 0.01 seconds


  Module allocation information for function __float_mule11m52b_1023nih:
    Number of complex operations: 4
    Number of complex operations: 4
  Time to perform module allocation: 0.03 seconds


  Module allocation information for function __float_mule8m23b_127nih:
    Number of complex operations: 1
    Number of complex operations: 1
  Time to perform module allocation: 0.02 seconds


  Module allocation information for function __float_sube11m52b_1023nih:
    Number of complex operations: 0
    Number of complex operations: 0
  Time to perform module allocation: 0.04 seconds


  Module allocation information for function __int32_to_float64e11m52b_1023nih:
    Number of complex operations: 0
    Number of complex operations: 0
  Time to perform module allocation: 0.03 seconds


  Module allocation information for function __int64_to_float32e8m23b_127nih:
    Number of complex operations: 0
    Number of complex operations: 0
  Time to perform module allocation: 0.04 seconds


  Module allocation information for function __internal_sqrtf:
    Number of complex operations: 5
    Number of complex operations: 5
  Time to perform module allocation: 0.02 seconds


  Scheduling Information of function __divdi3:
    Number of control steps: 5
    Minimum slack: 5.1892333303333507
    Estimated max frequency (MHz): 207.86707580421742
  Time to perform scheduling: 0.01 seconds

  Number of function call sites = 2

  State Transition Graph Information of function __divdi3:
    Number of operations: 66
    Number of basic blocks: 5
    Number of states: 3
    Done port is registered
  Time to perform creation of STG: 0.00 seconds


  Scheduling Information of function __float32_to_int32_round_to_zeroe8m23b_127nih:
    Number of control steps: 7
    Minimum slack: 7.4129999990000064
    Estimated max frequency (MHz): 386.54812509217408
  Time to perform scheduling: 0.00 seconds

  Number of function call sites = 5

  State Transition Graph Information of function __float32_to_int32_round_to_zeroe8m23b_127nih:
    Number of operations: 44
    Number of basic blocks: 7
    Number of states: 5
    Minimum number of cycles: 2
    Maximum number of cycles 3
    Done port is registered
  Time to perform creation of STG: 0.00 seconds


  Scheduling Information of function __float64_to_int32_round_to_zeroe11m52b_1023nih:
    Number of control steps: 8
    Minimum slack: 8.2289999989999991
    Estimated max frequency (MHz): 564.65273824694907
  Time to perform scheduling: 0.01 seconds


  State Transition Graph Information of function __float64_to_int32_round_to_zeroe11m52b_1023nih:
    Number of operations: 39
    Number of basic blocks: 8
    Number of states: 7
    Minimum number of cycles: 3
    Maximum number of cycles 5
    Parameters are registered
    Done port is registered
  Time to perform creation of STG: 0.00 seconds


  Scheduling Information of function __float_adde11m52b_1023nih:
    Number of control steps: 4
    Minimum slack: 0.11253464066666591
    Estimated max frequency (MHz): 101.13815458842987
  Time to perform scheduling: 0.05 seconds


  State Transition Graph Information of function __float_adde11m52b_1023nih:
    Number of operations: 438
    Number of basic blocks: 3
    Number of states: 3
    Minimum number of cycles: 3
    Maximum number of cycles 3
    Parameters are registered
    Done port is registered
  Time to perform creation of STG: 0.00 seconds


  Scheduling Information of function __float_gte11m52b_1023nih:
    Number of control steps: 5
    Minimum slack: 8.6344999980000026
    Estimated max frequency (MHz): 732.33247787282085
  Time to perform scheduling: 0.00 seconds

  Number of function call sites = 3

  State Transition Graph Information of function __float_gte11m52b_1023nih:
    Number of operations: 20
    Number of basic blocks: 5
    Number of states: 3
    Minimum number of cycles: 2
    Maximum number of cycles 2
    Done port is registered
  Time to perform creation of STG: 0.01 seconds


  Scheduling Information of function __float_mule11m52b_1023nih:
    Number of control steps: 4
    Minimum slack: 0.048433324333333971
    Estimated max frequency (MHz): 100.4866904469601
  Time to perform scheduling: 0.01 seconds


  State Transition Graph Information of function __float_mule11m52b_1023nih:
    Number of operations: 110
    Number of basic blocks: 3
    Number of states: 3
    Minimum number of cycles: 3
    Maximum number of cycles 3
    Parameters are registered
    Done port is registered
  Time to perform creation of STG: 0.00 seconds


  Scheduling Information of function __float_mule8m23b_127nih:
    Number of control steps: 4
    Minimum slack: 0.14046665266666675
    Estimated max frequency (MHz): 101.4246785087923
  Time to perform scheduling: 0.01 seconds


  State Transition Graph Information of function __float_mule8m23b_127nih:
    Number of operations: 124
    Number of basic blocks: 3
    Number of states: 3
    Minimum number of cycles: 3
    Maximum number of cycles 3
    Parameters are registered
    Done port is registered
  Time to perform creation of STG: 0.00 seconds


  Scheduling Information of function __float_sube11m52b_1023nih:
    Number of control steps: 4
    Minimum slack: 0.11253464066666591
    Estimated max frequency (MHz): 101.13815458842987
  Time to perform scheduling: 0.05 seconds


  State Transition Graph Information of function __float_sube11m52b_1023nih:
    Number of operations: 438
    Number of basic blocks: 3
    Number of states: 3
    Minimum number of cycles: 3
    Maximum number of cycles 3
    Parameters are registered
    Done port is registered
  Time to perform creation of STG: 0.00 seconds


  Scheduling Information of function __int32_to_float64e11m52b_1023nih:
    Number of control steps: 5
    Minimum slack: 1.0565666486666594
    Estimated max frequency (MHz): 111.81388184112917
  Time to perform scheduling: 0.02 seconds


  State Transition Graph Information of function __int32_to_float64e11m52b_1023nih:
    Number of operations: 162
    Number of basic blocks: 5
    Number of states: 4
    Minimum number of cycles: 3
    Maximum number of cycles 3
    Parameters are registered
    Done port is registered
  Time to perform creation of STG: 0.00 seconds


  Scheduling Information of function __int64_to_float32e8m23b_127nih:
    Number of control steps: 9
    Minimum slack: 2.3929146626666653
    Estimated max frequency (MHz): 131.45639304087922
  Time to perform scheduling: 0.05 seconds

  Number of function call sites = 2

  State Transition Graph Information of function __int64_to_float32e8m23b_127nih:
    Number of operations: 420
    Number of basic blocks: 9
    Number of states: 7
    Minimum number of cycles: 2
    Maximum number of cycles 4
    Done port is registered
  Time to perform creation of STG: 0.00 seconds


  Scheduling Information of function __internal_sqrtf:
    Number of control steps: 8
    Minimum slack: 2.717999996000017
    Estimated max frequency (MHz): 137.32491066337582
  Time to perform scheduling: 0.01 seconds

  Number of function call sites = 1

  State Transition Graph Information of function __internal_sqrtf:
    Number of operations: 93
    Number of basic blocks: 7
    Number of states: 6
    Minimum number of cycles: 2
    Maximum number of cycles 4
    Done port is registered
  Time to perform creation of STG: 0.00 seconds


  Easy binding information for function __divdi3:
    Bound operations:57/66
  Time to perform easy binding: 0.00 seconds


  Easy binding information for function __float32_to_int32_round_to_zeroe8m23b_127nih:
    Bound operations:40/44
  Time to perform easy binding: 0.00 seconds


  Easy binding information for function __float64_to_int32_round_to_zeroe11m52b_1023nih:
    Bound operations:37/39
  Time to perform easy binding: 0.00 seconds


  Easy binding information for function __float_adde11m52b_1023nih:
    Bound operations:375/438
  Time to perform easy binding: 0.00 seconds


  Easy binding information for function __float_gte11m52b_1023nih:
    Bound operations:20/20
  Time to perform easy binding: 0.00 seconds


  Easy binding information for function __float_mule11m52b_1023nih:
    Bound operations:60/110
  Time to perform easy binding: 0.00 seconds


  Easy binding information for function __float_mule8m23b_127nih:
    Bound operations:105/124
  Time to perform easy binding: 0.00 seconds


  Easy binding information for function __float_sube11m52b_1023nih:
    Bound operations:375/438
  Time to perform easy binding: 0.00 seconds


  Easy binding information for function __int32_to_float64e11m52b_1023nih:
    Bound operations:133/162
  Time to perform easy binding: 0.00 seconds


  Easy binding information for function __int64_to_float32e8m23b_127nih:
    Bound operations:349/420
  Time to perform easy binding: 0.01 seconds


  Easy binding information for function __internal_sqrtf:
    Bound operations:81/93
  Time to perform easy binding: 0.00 seconds


  Storage Value Information of function __divdi3:
    Number of storage values inserted: 12
  Time to compute storage value information: 0.00 seconds


  Storage Value Information of function __float32_to_int32_round_to_zeroe8m23b_127nih:
    Number of storage values inserted: 6
  Time to compute storage value information: 0.00 seconds


  Storage Value Information of function __float64_to_int32_round_to_zeroe11m52b_1023nih:
    Number of storage values inserted: 10
  Time to compute storage value information: 0.00 seconds


  Storage Value Information of function __float_adde11m52b_1023nih:
    Number of storage values inserted: 206
  Time to compute storage value information: 0.00 seconds


  Storage Value Information of function __float_gte11m52b_1023nih:
    Number of storage values inserted: 3
  Time to compute storage value information: 0.00 seconds


  Storage Value Information of function __float_mule11m52b_1023nih:
    Number of storage values inserted: 15
  Time to compute storage value information: 0.00 seconds


  Storage Value Information of function __float_mule8m23b_127nih:
    Number of storage values inserted: 6
  Time to compute storage value information: 0.00 seconds


  Storage Value Information of function __float_sube11m52b_1023nih:
    Number of storage values inserted: 206
  Time to compute storage value information: 0.00 seconds


  Storage Value Information of function __int32_to_float64e11m52b_1023nih:
    Number of storage values inserted: 4
  Time to compute storage value information: 0.00 seconds


  Storage Value Information of function __int64_to_float32e8m23b_127nih:
    Number of storage values inserted: 35
  Time to compute storage value information: 0.00 seconds


  Storage Value Information of function __internal_sqrtf:
    Number of storage values inserted: 18
  Time to compute storage value information: 0.00 seconds

  Slack computed in 0.00 seconds
  Weight computation completed in 0.00 seconds
  False-loop computation completed in 0.00 seconds
  Iteration 0 completed in 0.00 seconds

  Register binding information for function __divdi3:
    Register allocation algorithm obtains a sub-optimal result: 10 registers(LB:9)
  Time to perform register binding: 0.00 seconds

  Iteration 1 completed in 0.00 seconds
  Clique covering computation completed in 0.00 seconds

  Module binding information for function __divdi3:
    Number of modules instantiated: 66
    Number of performance conflicts: 0
    Estimated resources area (no Muxes and address logic): 834
    Estimated area of MUX21: 0
    Total estimated area: 834
    Estimated number of DSPs: 0
  Time to perform module binding: 0.00 seconds


  Register binding information for function __divdi3:
    Register allocation algorithm obtains a sub-optimal result: 10 registers(LB:9)
  Time to perform register binding: 0.00 seconds


  Connection Binding Information for function __divdi3:
    Number of allocated multiplexers (2-to-1 equivalent): 6
  Time to perform interconnection binding: 0.00 seconds

  Total number of flip-flops in function __divdi3: 325
  Slack computed in 0.00 seconds
  Weight computation completed in 0.00 seconds
  False-loop computation completed in 0.00 seconds
  Iteration 0 completed in 0.00 seconds

  Register binding information for function __float32_to_int32_round_to_zeroe8m23b_127nih:
    Register allocation algorithm obtains a sub-optimal result: 6 registers(LB:4)
  Time to perform register binding: 0.00 seconds

  Iteration 1 completed in 0.00 seconds
  Clique covering computation completed in 0.00 seconds

  Module binding information for function __float32_to_int32_round_to_zeroe8m23b_127nih:
    Number of modules instantiated: 44
    Number of performance conflicts: 0
    Estimated resources area (no Muxes and address logic): 553
    Estimated area of MUX21: 0
    Total estimated area: 553
    Estimated number of DSPs: 0
  Time to perform module binding: 0.00 seconds


  Register binding information for function __float32_to_int32_round_to_zeroe8m23b_127nih:
    Register allocation algorithm obtains a sub-optimal result: 6 registers(LB:4)
  Time to perform register binding: 0.00 seconds


  Connection Binding Information for function __float32_to_int32_round_to_zeroe8m23b_127nih:
    Number of allocated multiplexers (2-to-1 equivalent): 2
  Time to perform interconnection binding: 0.00 seconds

  Total number of flip-flops in function __float32_to_int32_round_to_zeroe8m23b_127nih: 103
  Slack computed in 0.00 seconds
  Weight computation completed in 0.00 seconds
  False-loop computation completed in 0.00 seconds
  Iteration 0 completed in 0.00 seconds

  Register binding information for function __float64_to_int32_round_to_zeroe11m52b_1023nih:
    Register allocation algorithm obtains a sub-optimal result: 9 registers(LB:6)
  Time to perform register binding: 0.00 seconds

  Iteration 1 completed in 0.00 seconds
  Clique covering computation completed in 0.00 seconds

  Module binding information for function __float64_to_int32_round_to_zeroe11m52b_1023nih:
    Number of modules instantiated: 39
    Number of performance conflicts: 0
    Estimated resources area (no Muxes and address logic): 472
    Estimated area of MUX21: 0
    Total estimated area: 472
    Estimated number of DSPs: 0
  Time to perform module binding: 0.00 seconds


  Register binding information for function __float64_to_int32_round_to_zeroe11m52b_1023nih:
    Register allocation algorithm obtains a sub-optimal result: 9 registers(LB:6)
  Time to perform register binding: 0.00 seconds


  Connection Binding Information for function __float64_to_int32_round_to_zeroe11m52b_1023nih:
    Number of allocated multiplexers (2-to-1 equivalent): 3
  Time to perform interconnection binding: 0.00 seconds

  Total number of flip-flops in function __float64_to_int32_round_to_zeroe11m52b_1023nih: 128
  Slack computed in 0.00 seconds
  Weight computation completed in 0.00 seconds
  False-loop computation completed in 0.00 seconds
  Iteration 0 completed in 0.00 seconds

  Register binding information for function __float_adde11m52b_1023nih:
    Register allocation algorithm obtains an optimal result: 206 registers
  Time to perform register binding: 0.00 seconds

  Iteration 1 completed in 0.00 seconds
  Clique covering computation completed in 0.00 seconds

  Module binding information for function __float_adde11m52b_1023nih:
    Number of modules instantiated: 438
    Number of performance conflicts: 31
    Estimated resources area (no Muxes and address logic): 5660
    Estimated area of MUX21: 0
    Total estimated area: 5660
    Estimated number of DSPs: 0
  Time to perform module binding: 0.01 seconds


  Register binding information for function __float_adde11m52b_1023nih:
    Register allocation algorithm obtains an optimal result: 206 registers
  Time to perform register binding: 0.00 seconds

  Total number of flip-flops in function __float_adde11m52b_1023nih: 400
  All registers are without enable: function pipelining may come for free
  Resources are not shared in function __float_adde11m52b_1023nih: function pipelining may come for free

  Module binding information for function __float_gte11m52b_1023nih:
    Number of modules instantiated: 20
    Number of performance conflicts: 0
    Estimated resources area (no Muxes and address logic): 140
    Estimated area of MUX21: 0
    Total estimated area: 140
    Estimated number of DSPs: 0
  Time to perform module binding: 0.00 seconds


  Register binding information for function __float_gte11m52b_1023nih:
    Register allocation algorithm obtains an optimal result: 3 registers
  Time to perform register binding: 0.00 seconds


  Connection Binding Information for function __float_gte11m52b_1023nih:
    Number of allocated multiplexers (2-to-1 equivalent): 1
  Time to perform interconnection binding: 0.00 seconds

  Total number of flip-flops in function __float_gte11m52b_1023nih: 66
  All registers are without enable: function pipelining may come for free
  Resources are not shared in function __float_gte11m52b_1023nih: function pipelining may come for free
  Slack computed in 0.00 seconds
  Weight computation completed in 0.00 seconds
  False-loop computation completed in 0.00 seconds
  Iteration 0 completed in 0.00 seconds

  Register binding information for function __float_mule11m52b_1023nih:
    Register allocation algorithm obtains an optimal result: 15 registers
  Time to perform register binding: 0.00 seconds

  Iteration 1 completed in 0.00 seconds
  Clique covering computation completed in 0.00 seconds

  Module binding information for function __float_mule11m52b_1023nih:
    Number of modules instantiated: 110
    Number of performance conflicts: 5
    Estimated resources area (no Muxes and address logic): 1587
    Estimated area of MUX21: 0
    Total estimated area: 1587
    Estimated number of DSPs: 12
  Time to perform module binding: 0.00 seconds


  Register binding information for function __float_mule11m52b_1023nih:
    Register allocation algorithm obtains an optimal result: 15 registers
  Time to perform register binding: 0.00 seconds

  Total number of flip-flops in function __float_mule11m52b_1023nih: 259
  All registers are without enable: function pipelining may come for free
  Resources are not shared in function __float_mule11m52b_1023nih: function pipelining may come for free

  Module allocation information for function __internal_scalbn:
    Number of complex operations: 6
    Number of complex operations: 6
  Time to perform module allocation: 0.02 seconds


  Scheduling Information of function __internal_scalbn:
    Number of control steps: 31
    Minimum slack: 0.048433324333323313
    Estimated max frequency (MHz): 100.48669044696
  Time to perform scheduling: 0.01 seconds

  Number of function call sites = 4

  State Transition Graph Information of function __internal_scalbn:
    Number of operations: 136
    Number of basic blocks: 13
    Number of states: 30
    Minimum number of cycles: 3
    Maximum number of cycles 12
    Parameters are registered
    Done port is registered
  Time to perform creation of STG: 0.00 seconds


  Easy binding information for function __internal_scalbn:
    Bound operations:108/136
  Time to perform easy binding: 0.00 seconds


  Storage Value Information of function __internal_scalbn:
    Number of storage values inserted: 19
  Time to compute storage value information: 0.00 seconds

  Slack computed in 0.00 seconds
  Weight computation completed in 0.00 seconds
  False-loop computation completed in 0.00 seconds
  Iteration 0 completed in 0.00 seconds

  Register binding information for function __float_mule8m23b_127nih:
    Register allocation algorithm obtains an optimal result: 6 registers
  Time to perform register binding: 0.00 seconds

  Iteration 1 completed in 0.00 seconds
  Clique covering computation completed in 0.00 seconds

  Module binding information for function __float_mule8m23b_127nih:
    Number of modules instantiated: 124
    Number of performance conflicts: 0
    Estimated resources area (no Muxes and address logic): 1401
    Estimated area of MUX21: 0
    Total estimated area: 1401
    Estimated number of DSPs: 3
  Time to perform module binding: 0.00 seconds


  Register binding information for function __float_mule8m23b_127nih:
    Register allocation algorithm obtains an optimal result: 6 registers
  Time to perform register binding: 0.00 seconds

  Total number of flip-flops in function __float_mule8m23b_127nih: 99
  All registers are without enable: function pipelining may come for free
  Resources are not shared in function __float_mule8m23b_127nih: function pipelining may come for free
  Slack computed in 0.00 seconds
  Weight computation completed in 0.00 seconds
  False-loop computation completed in 0.00 seconds
  Iteration 0 completed in 0.00 seconds

  Register binding information for function __float_sube11m52b_1023nih:
    Register allocation algorithm obtains an optimal result: 206 registers
  Time to perform register binding: 0.00 seconds

  Iteration 1 completed in 0.00 seconds
  Clique covering computation completed in 0.00 seconds

  Module binding information for function __float_sube11m52b_1023nih:
    Number of modules instantiated: 438
    Number of performance conflicts: 31
    Estimated resources area (no Muxes and address logic): 5660
    Estimated area of MUX21: 0
    Total estimated area: 5660
    Estimated number of DSPs: 0
  Time to perform module binding: 0.00 seconds


  Register binding information for function __float_sube11m52b_1023nih:
    Register allocation algorithm obtains an optimal result: 206 registers
  Time to perform register binding: 0.00 seconds

  Total number of flip-flops in function __float_sube11m52b_1023nih: 400
  All registers are without enable: function pipelining may come for free
  Resources are not shared in function __float_sube11m52b_1023nih: function pipelining may come for free

  Module allocation information for function __hide_kernel_cos:
    Number of complex operations: 27
    Number of complex operations: 27
  Time to perform module allocation: 0.01 seconds


  Module allocation information for function __hide_kernel_sin:
    Number of complex operations: 19
    Number of complex operations: 19
  Time to perform module allocation: 0.01 seconds


  Scheduling Information of function __hide_kernel_cos:
    Number of control steps: 76
    Minimum slack: 0.048433324333294892
    Estimated max frequency (MHz): 100.48669044695971
  Time to perform scheduling: 0.00 seconds

  Number of function call sites = 3

  State Transition Graph Information of function __hide_kernel_cos:
    Number of operations: 56
    Number of basic blocks: 7
    Number of states: 76
    Parameters are registered
    Done port is registered
  Time to perform creation of STG: 0.00 seconds


  Scheduling Information of function __hide_kernel_sin:
    Number of control steps: 54
    Minimum slack: 0.048433324333323313
    Estimated max frequency (MHz): 100.48669044696
  Time to perform scheduling: 0.01 seconds

  Number of function call sites = 2

  State Transition Graph Information of function __hide_kernel_sin:
    Number of operations: 34
    Number of basic blocks: 5
    Number of states: 54
    Parameters are registered
    Done port is registered
  Time to perform creation of STG: 0.00 seconds


  Easy binding information for function __hide_kernel_cos:
    Bound operations:30/56
  Time to perform easy binding: 0.00 seconds


  Easy binding information for function __hide_kernel_sin:
    Bound operations:14/34
  Time to perform easy binding: 0.00 seconds


  Storage Value Information of function __hide_kernel_cos:
    Number of storage values inserted: 32
  Time to compute storage value information: 0.00 seconds


  Storage Value Information of function __hide_kernel_sin:
    Number of storage values inserted: 20
  Time to compute storage value information: 0.00 seconds

  Slack computed in 0.00 seconds
  Weight computation completed in 0.00 seconds
  False-loop computation completed in 0.00 seconds
  Iteration 0 completed in 0.00 seconds

  Register binding information for function __hide_kernel_cos:
    Register allocation algorithm obtains a sub-optimal result: 13 registers(LB:5)
  Time to perform register binding: 0.00 seconds

  Iteration 1 completed in 0.00 seconds

  Register binding information for function __hide_kernel_cos:
    Register allocation algorithm obtains a sub-optimal result: 13 registers(LB:5)
  Time to perform register binding: 0.00 seconds

  Iteration 2 completed in 0.00 seconds
  Clique covering computation completed in 0.00 seconds

  Module binding information for function __hide_kernel_cos:
    Number of modules instantiated: 33
    Number of performance conflicts: 0
    Estimated resources area (no Muxes and address logic): 8104
    Estimated area of MUX21: 343
    Total estimated area: 8447
    Estimated number of DSPs: 0
  Time to perform module binding: 0.00 seconds


  Register binding information for function __hide_kernel_cos:
    Register allocation algorithm obtains a sub-optimal result: 13 registers(LB:5)
  Time to perform register binding: 0.01 seconds


  Connection Binding Information for function __hide_kernel_cos:
    Number of allocated multiplexers (2-to-1 equivalent): 23
  Time to perform interconnection binding: 0.00 seconds

  Total number of flip-flops in function __hide_kernel_cos: 609
  Slack computed in 0.00 seconds
  Weight computation completed in 0.00 seconds
  False-loop computation completed in 0.00 seconds
  Iteration 0 completed in 0.00 seconds

  Register binding information for function __hide_kernel_sin:
    Register allocation algorithm obtains a sub-optimal result: 9 registers(LB:5)
  Time to perform register binding: 0.00 seconds

  Iteration 1 completed in 0.00 seconds

  Register binding information for function __hide_kernel_sin:
    Register allocation algorithm obtains a sub-optimal result: 9 registers(LB:5)
  Time to perform register binding: 0.00 seconds

  Iteration 2 completed in 0.00 seconds
  Clique covering computation completed in 0.00 seconds

  Module binding information for function __hide_kernel_sin:
    Number of modules instantiated: 19
    Number of performance conflicts: 0
    Estimated resources area (no Muxes and address logic): 8024
    Estimated area of MUX21: 275
    Total estimated area: 8299
    Estimated number of DSPs: 0
  Time to perform module binding: 0.00 seconds


  Register binding information for function __hide_kernel_sin:
    Register allocation algorithm obtains a sub-optimal result: 9 registers(LB:5)
  Time to perform register binding: 0.00 seconds


  Connection Binding Information for function __hide_kernel_sin:
    Number of allocated multiplexers (2-to-1 equivalent): 18
  Time to perform interconnection binding: 0.01 seconds

  Total number of flip-flops in function __hide_kernel_sin: 481
  Slack computed in 0.00 seconds
  Weight computation completed in 0.00 seconds
  False-loop computation completed in 0.00 seconds
  Iteration 0 completed in 0.00 seconds

  Register binding information for function __int32_to_float64e11m52b_1023nih:
    Register allocation algorithm obtains an optimal result: 4 registers
  Time to perform register binding: 0.00 seconds

  Iteration 1 completed in 0.00 seconds
  Clique covering computation completed in 0.00 seconds

  Module binding information for function __int32_to_float64e11m52b_1023nih:
    Number of modules instantiated: 162
    Number of performance conflicts: 1
    Estimated resources area (no Muxes and address logic): 729
    Estimated area of MUX21: 0
    Total estimated area: 729
    Estimated number of DSPs: 0
  Time to perform module binding: 0.00 seconds


  Register binding information for function __int32_to_float64e11m52b_1023nih:
    Register allocation algorithm obtains an optimal result: 4 registers
  Time to perform register binding: 0.00 seconds


  Connection Binding Information for function __int32_to_float64e11m52b_1023nih:
    Number of allocated multiplexers (2-to-1 equivalent): 1
  Time to perform interconnection binding: 0.01 seconds

  Total number of flip-flops in function __int32_to_float64e11m52b_1023nih: 50
  All registers are without enable: function pipelining may come for free
  Resources are not shared in function __int32_to_float64e11m52b_1023nih: function pipelining may come for free
  Slack computed in 0.00 seconds
  Weight computation completed in 0.00 seconds
  False-loop computation completed in 0.00 seconds
  Iteration 0 completed in 0.00 seconds

  Register binding information for function __int64_to_float32e8m23b_127nih:
    Register allocation algorithm obtains a sub-optimal result: 35 registers(LB:21)
  Time to perform register binding: 0.00 seconds

  Iteration 1 completed in 0.00 seconds
  Clique covering computation completed in 0.00 seconds

  Module binding information for function __int64_to_float32e8m23b_127nih:
    Number of modules instantiated: 419
    Number of performance conflicts: 9
    Estimated resources area (no Muxes and address logic): 2567
    Estimated area of MUX21: 132
    Total estimated area: 2699
    Estimated number of DSPs: 0
  Time to perform module binding: 0.01 seconds


  Register binding information for function __int64_to_float32e8m23b_127nih:
    Register allocation algorithm obtains a sub-optimal result: 35 registers(LB:21)
  Time to perform register binding: 0.00 seconds


  Connection Binding Information for function __int64_to_float32e8m23b_127nih:
    Number of allocated multiplexers (2-to-1 equivalent): 5
  Time to perform interconnection binding: 0.01 seconds

  Total number of flip-flops in function __int64_to_float32e8m23b_127nih: 506
  Slack computed in 0.01 seconds
  Weight computation completed in 0.00 seconds
  False-loop computation completed in 0.00 seconds
  Iteration 0 completed in 0.00 seconds

  Register binding information for function __internal_scalbn:
    Register allocation algorithm obtains a sub-optimal result: 14 registers(LB:8)
  Time to perform register binding: 0.00 seconds

  Iteration 1 completed in 0.00 seconds
  Clique covering computation completed in 0.00 seconds

  Module binding information for function __internal_scalbn:
    Number of modules instantiated: 131
    Number of performance conflicts: 0
    Estimated resources area (no Muxes and address logic): 2940
    Estimated area of MUX21: 103
    Total estimated area: 3043
    Estimated number of DSPs: 0
  Time to perform module binding: 0.01 seconds


  Register binding information for function __internal_scalbn:
    Register allocation algorithm obtains a sub-optimal result: 14 registers(LB:8)
  Time to perform register binding: 0.00 seconds


  Connection Binding Information for function __internal_scalbn:
    Number of allocated multiplexers (2-to-1 equivalent): 13
  Time to perform interconnection binding: 0.00 seconds

  Total number of flip-flops in function __internal_scalbn: 548

  Module allocation information for function __internal_cos:
    Number of complex operations: 263
    Number of complex operations: 263
  Time to perform module allocation: 0.22 seconds


  Scheduling Information of function __internal_cos:
    Number of control steps: 549
    Minimum slack: 2.7650104428289524e-13
    Estimated max frequency (MHz): 100.00000000000277
  Time to perform scheduling: 0.17 seconds

  Number of function call sites = 1

  State Transition Graph Information of function __internal_cos:
    Number of operations: 1737
    Number of basic blocks: 121
    Number of states: 594
    Done port is registered
  Time to perform creation of STG: 0.01 seconds


  Easy binding information for function __internal_cos:
    Bound operations:819/1737
  Time to perform easy binding: 0.00 seconds


  Storage Value Information of function __internal_cos:
    Number of storage values inserted: 640
  Time to compute storage value information: 0.00 seconds

  Slack computed in 0.01 seconds
  Weight computation completed in 0.04 seconds
  False-loop computation completed in 0.00 seconds
  Iteration 0 completed in 0.02 seconds

  Register binding information for function __internal_cos:
    Register allocation algorithm obtains a sub-optimal result: 430 registers(LB:62)
  Time to perform register binding: 0.34 seconds

  Iteration 1 completed in 0.02 seconds
  Clique covering computation completed in 0.38 seconds

  Module binding information for function __internal_cos:
    Number of modules instantiated: 1491
    Number of performance conflicts: 106
    Estimated resources area (no Muxes and address logic): 34005
    Estimated area of MUX21: 2673.5
    Total estimated area: 36678.5
    Estimated number of DSPs: 0
  Time to perform module binding: 0.46 seconds


  Register binding information for function __internal_cos:
    Register allocation algorithm obtains a sub-optimal result: 430 registers(LB:62)
  Time to perform register binding: 0.34 seconds


  Connection Binding Information for function __internal_cos:
    Number of allocated multiplexers (2-to-1 equivalent): 323
  Time to perform interconnection binding: 0.04 seconds

  Total number of flip-flops in function __internal_cos: 11697
  Slack computed in 0.00 seconds
  Weight computation completed in 0.00 seconds
  False-loop computation completed in 0.00 seconds
  Iteration 0 completed in 0.00 seconds

  Register binding information for function __internal_sqrtf:
    Register allocation algorithm obtains a sub-optimal result: 18 registers(LB:10)
  Time to perform register binding: 0.00 seconds

  Iteration 1 completed in 0.00 seconds
  Clique covering computation completed in 0.00 seconds

  Module binding information for function __internal_sqrtf:
    Number of modules instantiated: 93
    Number of performance conflicts: 0
    Estimated resources area (no Muxes and address logic): 3742
    Estimated area of MUX21: 0
    Total estimated area: 3742
    Estimated number of DSPs: 5
  Time to perform module binding: 0.00 seconds


  Register binding information for function __internal_sqrtf:
    Register allocation algorithm obtains a sub-optimal result: 18 registers(LB:10)
  Time to perform register binding: 0.00 seconds


  Connection Binding Information for function __internal_sqrtf:
    Number of allocated multiplexers (2-to-1 equivalent): 2
  Time to perform interconnection binding: 0.00 seconds

  Total number of flip-flops in function __internal_sqrtf: 395

  Module allocation information for function ex0_1_s3_29fixp:
    Number of complex operations: 24
    Number of complex operations: 24
  Time to perform module allocation: 0.08 seconds


  Scheduling Information of function ex0_1_s3_29fixp:
    Number of control steps: 32
    Minimum slack: 5.0000000000000003e-10
    Estimated max frequency (MHz): 100.000000005
  Time to perform scheduling: 0.06 seconds

  Number of function call sites = 1

  State Transition Graph Information of function ex0_1_s3_29fixp:
    Number of operations: 540
    Number of basic blocks: 6
    Number of states: 35
    Done port is registered
  Time to perform creation of STG: 0.01 seconds


  Easy binding information for function ex0_1_s3_29fixp:
    Bound operations:452/540
  Time to perform easy binding: 0.00 seconds


  Storage Value Information of function ex0_1_s3_29fixp:
    Number of storage values inserted: 133
  Time to compute storage value information: 0.00 seconds

  Slack computed in 0.00 seconds
  Weight computation completed in 0.00 seconds
  False-loop computation completed in 0.00 seconds
  Iteration 0 completed in 0.00 seconds

  Register binding information for function ex0_1_s3_29fixp:
    Register allocation algorithm obtains a sub-optimal result: 128 registers(LB:53)
  Time to perform register binding: 0.01 seconds

  Iteration 1 completed in 0.00 seconds
  Clique covering computation completed in 0.01 seconds

  Module binding information for function ex0_1_s3_29fixp:
    Number of modules instantiated: 532
    Number of performance conflicts: 38
    Estimated resources area (no Muxes and address logic): 25341
    Estimated area of MUX21: 406
    Total estimated area: 25747
    Estimated number of DSPs: 25
  Time to perform module binding: 0.01 seconds


  Register binding information for function ex0_1_s3_29fixp:
    Register allocation algorithm obtains a sub-optimal result: 128 registers(LB:53)
  Time to perform register binding: 0.01 seconds


  Connection Binding Information for function ex0_1_s3_29fixp:
    Number of allocated multiplexers (2-to-1 equivalent): 21
  Time to perform interconnection binding: 0.01 seconds

  Total number of flip-flops in function ex0_1_s3_29fixp: 1848

  Module allocation information for function test:
    Number of complex operations: 28
    Number of complex operations: 28
  Time to perform module allocation: 0.05 seconds


  Scheduling Information of function test:
    Number of control steps: 39
    Minimum slack: 5.0000000000000003e-10
    Estimated max frequency (MHz): 100.000000005
  Time to perform scheduling: 0.05 seconds

  Number of function call sites = 0

  State Transition Graph Information of function test:
    Number of operations: 395
    Number of basic blocks: 10
    Number of states: 43
    Done port is registered
  Time to perform creation of STG: 0.00 seconds


  Easy binding information for function test:
    Bound operations:272/395
  Time to perform easy binding: 0.01 seconds


  Storage Value Information of function test:
    Number of storage values inserted: 68
  Time to compute storage value information: 0.00 seconds

  Slack computed in 0.00 seconds
  Weight computation completed in 0.00 seconds
  False-loop computation completed in 0.00 seconds
  Iteration 0 completed in 0.00 seconds

  Register binding information for function test:
    Register allocation algorithm obtains a sub-optimal result: 55 registers(LB:20)
  Time to perform register binding: 0.01 seconds

  Iteration 1 completed in 0.00 seconds
  Clique covering computation completed in 0.01 seconds

  Module binding information for function test:
    Number of modules instantiated: 377
    Number of performance conflicts: 2
    Estimated resources area (no Muxes and address logic): 9899
    Estimated area of MUX21: 479
    Total estimated area: 10378
    Estimated number of DSPs: 0
  Time to perform module binding: 0.01 seconds


  Register binding information for function test:
    Register allocation algorithm obtains a sub-optimal result: 55 registers(LB:20)
  Time to perform register binding: 0.00 seconds


  Connection Binding Information for function test:
    Number of allocated multiplexers (2-to-1 equivalent): 33
  Time to perform interconnection binding: 0.01 seconds

  Total number of flip-flops in function test: 1518
[0m  Parameter Pd20 (495333) (testvector 0) allocated at 1073741824 : reserved_mem_size = 2000
Padding of 48 for parameter Pd20
  Parameter Pd21 (495334) (testvector 0) allocated at 1073743872 : reserved_mem_size = 400
Padding of 624 for parameter Pd21
  Parameter Pd20 (495333) (testvector 1) allocated at 1073744896 : reserved_mem_size = 2000
Padding of 48 for parameter Pd20
  Parameter Pd21 (495334) (testvector 1) allocated at 1073746944 : reserved_mem_size = 400
Padding of 624 for parameter Pd21
  C-based testbench generation for function test: /home/zero/Desktop/COaT_project/FromTaffo_fpbench_instantCurrent/synthesis_with_opt/HLS_output//simulation/values.c
  Prepared testbench
clang-12: warning: optimization flag '-ffloat-store' is not supported [-Wignored-optimization-argument]
clang-12: warning: optimization flag '-ffloat-store' is not supported [-Wignored-optimization-argument]
warning: overriding the module target triple with i386-unknown-linux-gnu [-Woverride-module]
1 warning generated.

  Summary of resources:
     - ARRAY_1D_STD_BRAM_NN_SDS: 9
     - ARRAY_1D_STD_BRAM_NN_SDS_BASE: 9
     - ARRAY_1D_STD_DISTRAM_NN_SDS: 6
     - ASSIGN_SIGNED_FU: 2
     - ASSIGN_UNSIGNED_FU: 8
     - BMEMORY_CTRLN: 1
     - IIdata_converter_FU: 23
     - IUdata_converter_FU: 118
     - MUX_GATE: 478
     - OR_GATE: 26
     - SIMPLEJOIN_FU: 2
     - UIdata_converter_FU: 113
     - UUdata_converter_FU: 458
     - __builtin_abs: 3
     - addr_expr_FU: 16
     - bit_and_expr_FU: 19
     - bit_ior_concat_expr_FU: 17
     - bus_merger: 11
     - constant_value: 966
     - extract_bit_expr_FU: 297
     - flipflop_AR: 18
     - gt_expr_FU: 24
     - lshift_expr_FU: 50
     - lt_expr_FU: 11
     - lut_expr_FU: 630
     - minus_expr_FU: 2
     - mult_expr_FU: 5
     - multi_read_cond_FU: 18
     - negate_expr_FU: 4
     - plus_expr_FU: 22
     - read_cond_FU: 90
     - register_SE: 549
     - register_STD: 679
     - rshift_expr_FU: 65
     - truth_andif_expr_FU: 4
     - ui_bit_and_expr_FU: 239
     - ui_bit_ior_concat_expr_FU: 47
     - ui_bit_ior_expr_FU: 107
     - ui_bit_xor_expr_FU: 24
     - ui_cond_expr_FU: 122
     - ui_eq_expr_FU: 110
     - ui_extract_bit_expr_FU: 1093
     - ui_fshl_expr_FU: 2
     - ui_gt_expr_FU: 6
     - ui_lshift_expr_FU: 357
     - ui_lt_expr_FU: 24
     - ui_minus_expr_FU: 29
     - ui_mult_expr_FU: 8
     - ui_ne_expr_FU: 19
     - ui_negate_expr_FU: 9
     - ui_plus_expr_FU: 140
     - ui_pointer_plus_expr_FU: 108
     - ui_rshift_expr_FU: 271
     - ui_ternary_plus_expr_FU: 5
     - ui_ternary_pm_expr_FU: 3
Start reading vector           1's values from input file.

Reading of vector values from input file completed. Simulation started.
Simulation ended after                25216 cycles.

Simulation completed with success

Start reading vector           2's values from input file.

Reading of vector values from input file completed. Simulation started.
Simulation ended after                24911 cycles.

Simulation completed with success

No more values found. Simulation(s) executed:           2.

- /home/zero/Desktop/COaT_project/FromTaffo_fpbench_instantCurrent/synthesis_with_opt/HLS_output//simulation/testbench_test_tb.v:247: Verilog $finish
No more values found. Simulation(s) executed:           2.

- /home/zero/Desktop/COaT_project/FromTaffo_fpbench_instantCurrent/synthesis_with_opt/HLS_output//simulation/testbench_test_tb.v:288: Verilog $finish
- /home/zero/Desktop/COaT_project/FromTaffo_fpbench_instantCurrent/synthesis_with_opt/HLS_output//simulation/testbench_test_tb.v:288: Second verilog $finish, exiting
1. Simulation completed with SUCCESS; Execution time 25216 cycles;
2. Simulation completed with SUCCESS; Execution time 24911 cycles;
Analyzing Xilinx synthesis results
  Total cycles             : 50127 cycles
  Number of executions     : 2
  Average execution        : 25063 cycles
  Slices                   : 7529
  Luts                     : 20209
  Lut FF Pairs             : 20209
  Power                    : 0.60399999999999998
  Registers                : 17027
  DSPs                     : 39
  BRAMs                    : 24
  Clock period             : 10
  Design minimum period    : 11.4
  Design slack             : -1.4000000000000004
  Frequency                : 87.719298245614027
  AreaxTime                : 5774079.1038000006
  Time                     : 285.71820000000002
  Tot. Time                : 571.44780000000003
